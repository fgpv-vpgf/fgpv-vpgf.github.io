{"version":3,"sources":["app-seed.js","app.module.js","ui/toc/toc.module.js","ui/toc/toc.service.js","app.js","ui/toc/toc.controller.js","ui/toc/layer-item.directive.js","ui/toc/layer-item-flag.directive.js","ui/toc/layer-item-button.directive.js","ui/toc/layer-group-toggle.directive.js","ui/toc/layer-group-toggle-button.directive.js","ui/toolbox/toolbox.module.js","ui/toolbox/toolbox.controller.js","ui/sidenav/sidenav.module.js","ui/sidenav/sidenav.service.js","ui/sidenav/menulink.directive.js","ui/settings/settings.module.js","ui/settings/settings.controller.js","ui/panels/panels.module.js","ui/panels/side-panel.directive.js","ui/panels/main-panel.directive.js","ui/panels/filters-panel.directive.js","ui/panels/content-pane.directive.js","ui/mapnav/mapnav.module.js","ui/mapnav/mapnav.service.js","ui/mapnav/mapnav.controller.js","ui/mapnav/mapnav-button.directive.js","ui/metadata/metadata.module.js","ui/metadata/metadata.controller.js","ui/filters/filters.module.js","ui/filters/filters-default.directive.js","ui/common/common.module.js","ui/common/toggle-slide.animation.js","ui/common/plug-slide.animation.js","ui/common/morph.directive.js","ui/common/filter.js","ui/appbar/appbar.module.js","ui/appbar/appbar.controller.js","common/router/router.module.js","common/router/statehelper.js","ui/ui.module.js","layout/layout.module.js","layout/side-panel-plug.controller.js","layout/shell.controller.js","layout/main-panel-plug.controller.js","layout/layout.service.js","layout/layout.route.js","layout/filters-panel-plug.controller.js","geo/geo.module.js","geo/init-map.directive.js","geo/geo.service.js","core/core.module.js","core/core.run.js","core/core.config.js","core/constant.service.js","core/config.service.js","core/common.service.js"],"names":["angular","element","document","ready","child","nodes","Array","from","getElementsByClassName","forEach","node","attr","appendChild","bootstrap","strictDi","module","tocService","$state","setLayerControlValues","control","template","icon","value","tooltip","label","initLayers","items","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","type","_name","toggles","service","presets","_name2","flags","_name3","groupToggles","err","toggleGroupVisibility","group","console","log","visibility","toggle","off","on","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","toggleVisiblity","layer","zoomIn","zoomOut","toggleSettings","current","name","indexOf","go","location","toggleMetadata","data","id","expanded","layerType","legend","metadata","enabled","settings","state","visible","user","scale","remove","reload","actions","action","extra","query","feature","image","dynamic","table","filter","error","reloading","factory","$inject","TocController","toggleFilters","toggleFiltersFull","views","index","activate","self","this","config","toggleGroup","controller","rvLayerItem","directive","restrict","templateUrl","scope","controllerAs","bindToController","rvLayerItemFlag","link","el","ctrl","require","rvLayerItemButton","rvLayerGroupToggle","Controller","rvLayerGroupToggleButton","ToolboxController","sideNavigationService","$mdSidenav","open","then","debug","close","argument","rvMenuLink","linkFunc","section","SettingsController","rvSidePanel","rvMainPanel","rvFiltersPanel","rvContentPane","closePanel","title","titleStyle","transclude","mapNavigationService","by","arguments","length","zoomTo","level","zoom","controls","inButton","call","slider","outButton","geoLocation","marquee","home","history","MapNavigationController","rvMapnavButton","MetadataController","rvFiltersDefault","message","toggleOpenBuilder","toggleOpen","callback","targetHeight","getTargetHeight","TweenLite","fromTo","RV_TOGGLE_SLIDE_DURATION","height","ease","RV_SWIFT_IN_OUT_EASE","onComplete","css","toggleClose","to","ngShowHideBootstrap","addClass","cssClass","false","true","prop","enter","leave","removeClass","Ease","BezierEasing","animation","animationBuilder","direction","grand","$rootElement","func","animationTypes","makeFadeAnim","reverse","duration","RV_PLUG_SLIDE_DURATION","shift","calculateShift","start","x","y","z","opacity","end","cleanup","clearProps","buildTween","makeSlideAnim","getPanelSize","find","RV_PANEL_CLASS","outerHeight","outerWidth","deltaHelper","delta","position","top","left","travel",0,1,2,3,"modifier","toString","sequences","RV_PLUG_SLIDE_ID_DATA","sequence","eventCallback","counter","extend","directions","slide","fade","Object","keys","rvMorph","classReg","toClass","$watch","newClass","oldClass","RegExp","replace","rvMorphSpeed","morphSpeed","className","rvTruncate","$timeout","ngBind","AppbarController","layoutService","toggleToc","stateName","tocSelected","toolboxSelected","toggleToolbox","statehelperConfig","$get","statehelper","configureStates","states","$stateProvider","getStates","stateCounts","provider","SidePanelPlugController","toState","active","ShellController","configService","$rootScope","events","$on","rvReady","hideLoadingScreen","isLoading","menu","children","MainPanelPlugController","isStaggering","event","sideReg","test","sidenav","mapnav","layoutConfig","templateRegistry","viewRegistry","url","appbarPlug","appbar","detailsPlug","geoSearchPlug","abstract","filtersPlug","contentPlug","panelPlug","toc","sidePanelPlug","toolbox","run","FiltersPanelPlugController","mode","filtersReg","split","pop","rvInitMap","geoService","val","gapi","grayMap","layers","promise","geoapi","window","initializedGeoApi","runBlock","$translate","$q","promises","push","initialize","all","$broadcast","reason","use","configBlock","$translateProvider","$mdThemingProvider","$mdIconProvider","statehelperConfigProvider","configureStateRouting","stateCfg","configureTranslations","useSanitizeValueStrategy","useStaticFilesLoader","prefix","suffix","configureTheme","theme","primaryPalette","accentPalette","configureIconsets","iconSet","constant","filtersPlug@","panelPlug@","sidePanelPlug@","$http","configDefaults","initializePromise","fulfill","reject","configInitialized","merge","isInitialized","configAttr","configJson","fromJson","e","get","nextPromises","common"],"mappings":"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","file":"app.js","sourcesContent":["angular.element(document)\r\n    .ready(function () {\r\n        'use strict';\r\n\r\n        // convert html collection to array:\r\n        // https://babeljs.io/docs/learn-es2015/#math-number-string-object-apis\r\n        var nodes = Array.from(document.getElementsByClassName('fgpv'));\r\n        var child;\r\n\r\n        nodes.forEach(function (node) {\r\n            // load shell template into the node\r\n            // we need to create an explicit child under app's root node, otherwise animation\r\n            // doesnt' work; see this plunk: http://plnkr.co/edit/7EIM71IOwC8h1HdguIdD\r\n            // or this one: http://plnkr.co/edit/Ds8e8d?p=preview\r\n            child = angular.element('<div>').attr('ng-include', '\\'app/layout/shell.html\\'')[0];\r\n            node.appendChild(child);\r\n\r\n            // bootstrap each node as an Angular app\r\n            // strictDi enforces explicit dependency names on each component: ngAnnotate should find most automatically\r\n            // this checks for any failures; to fix a problem add 'ngInject'; to the function preamble\r\n            angular.bootstrap(node, ['app'], { strictDi: true });\r\n        });\r\n    });\r\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name app\r\n     * @description\r\n     * The root module ties other modules together providing a very straightforward way to add or remove modules from the application.\r\n     *\r\n     */\r\n    angular.module('app', [\r\n        /*\r\n         * Order is not important. Angular makes a\r\n         * pass to register all of the modules listed\r\n         * and then when app.dashboard tries to use app.data,\r\n         * it's components are available.\r\n         */\r\n\r\n        /*\r\n         * Everybody has access to these.\r\n         * We could place these under every feature area,\r\n         * but this is easier to maintain.\r\n         */\r\n        'app.core',\r\n        'app.templates',\r\n        'app.geo',\r\n        'app.ui',\r\n\r\n        /*\r\n         * Feature areas\r\n         */\r\n        'app.layout'\r\n    ]);\r\n\r\n    // a separate templates module is needed to facilitate directive unit testing\r\n    angular.module('app.templates', []);\r\n})();\r\n","(() => {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name app.ui.toc\r\n     * @description\r\n     *\r\n     * The `app.ui.toc` module contains toc (or layer selector) panel.\r\n     */\r\n    angular\r\n        .module('app.ui.toc', []);\r\n})();\r\n","(() => {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc service\r\n     * @name tocService\r\n     * @module app.ui.toc\r\n     *\r\n     * @description\r\n     * The `tocService` service provides bindable layer data to the `TocController`'s template.\r\n     *\r\n     * __Some hardcoded sample config data.__\r\n     *\r\n     */\r\n    angular\r\n        .module('app.ui.toc')\r\n        .factory('tocService', tocService);\r\n\r\n    function tocService($state) {\r\n        const service = {\r\n            // a sample config bit describing layer selector structure; comes from the config file\r\n            data: {\r\n                items: [\r\n                    {\r\n                        type: 'group',\r\n                        name: 'Feature Layers',\r\n                        id: 1,\r\n                        expanded: true,\r\n                        items: [\r\n                            {\r\n                                type: 'layer',\r\n                                name: 'Layer Name 1 Layer Name 1 Layer Name 1 Layer Name 1',\r\n                                layerType: 'feature',\r\n                                id: 0,\r\n                                legend: [\r\n                                    {\r\n                                        icon: 'url',\r\n                                        name: 'something'\r\n                                    }\r\n                                ],\r\n\r\n                                // FIXME: these should be mostly filled by config default values\r\n                                toggles: {\r\n                                    metadata: {\r\n                                        enabled: true\r\n                                    },\r\n                                    settings: {\r\n                                        enabled: true\r\n                                    },\r\n                                    visibility: {\r\n                                        value: 'on', //'off', 'zoomIn', 'zoomOut'\r\n                                        enabled: true\r\n                                    }\r\n                                },\r\n                                state: 'default', // error, loading,\r\n                                flags: {\r\n                                    type: {\r\n                                        visible: true,\r\n                                        value: 'feature'\r\n                                    },\r\n                                    data: {\r\n                                        visible: true,\r\n                                        value: 'table'\r\n                                    },\r\n                                    user: {\r\n                                        visible: true\r\n                                    },\r\n                                    scale: {\r\n                                        visible: true\r\n                                    }\r\n                                }\r\n                            },\r\n                            {\r\n                                type: 'layer',\r\n                                name: 'Layer Name 2',\r\n                                layerType: 'feature',\r\n                                id: 1,\r\n                                legend: [\r\n                                    {\r\n                                        icon: 'url',\r\n                                        name: 'something'\r\n                                    }\r\n                                ],\r\n                                toggles: {\r\n                                    metadata: {\r\n                                        enabled: false\r\n                                    },\r\n                                    settings: {\r\n                                        enabled: true\r\n                                    },\r\n                                    visibility: {\r\n                                        value: 'zoomIn', //'off', 'zoomIn', 'zoomOut'\r\n                                        enabled: true\r\n                                    }\r\n                                },\r\n                                state: 'default', // error, loading,\r\n                                flags: {\r\n                                    type: {\r\n                                        visible: true,\r\n                                        value: 'feature'\r\n                                    },\r\n                                    data: {\r\n                                        visible: false,\r\n                                        value: 'table'\r\n                                    },\r\n                                    user: {\r\n                                        visible: false\r\n                                    },\r\n                                    scale: {\r\n                                        visible: true\r\n                                    }\r\n                                }\r\n                            },\r\n                            {\r\n                                type: 'group',\r\n                                name: 'Sample Subgroup',\r\n                                id: 1,\r\n                                expanded: false,\r\n                                items: [\r\n                                    {\r\n                                        type: 'layer',\r\n                                        name: 'Layer Name 2 Layer Name 2 Layer Name 2 Layer Name 2',\r\n                                        layerType: 'feature',\r\n                                        id: 3,\r\n                                        legend: [\r\n                                            {\r\n                                                icon: 'url',\r\n                                                name: 'something'\r\n                                            }\r\n                                        ],\r\n                                        toggles: {\r\n                                            metadata: {\r\n                                                enabled: true\r\n                                            },\r\n                                            settings: {\r\n                                                enabled: true\r\n                                            },\r\n                                            visibility: {\r\n                                                value: 'zoomIn', //'off', 'zoomIn', 'zoomOut'\r\n                                                enabled: true\r\n                                            }\r\n                                        },\r\n                                        state: 'default', // error, loading,\r\n                                        flags: {\r\n                                            type: {\r\n                                                visible: true,\r\n                                                value: 'dynamic'\r\n                                            },\r\n                                            data: {\r\n                                                visible: true,\r\n                                                value: 'filter'\r\n                                            },\r\n                                            user: {\r\n                                                visible: false\r\n                                            },\r\n                                            scale: {\r\n                                                visible: false\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        type: 'layer',\r\n                                        name: 'Subgroup Layer Name 2',\r\n                                        layerType: 'feature',\r\n                                        id: 4,\r\n                                        legend: [\r\n                                            {\r\n                                                icon: 'url',\r\n                                                name: 'something'\r\n                                            }\r\n                                        ],\r\n                                        toggles: {\r\n                                            metadata: {\r\n                                                enabled: true\r\n                                            },\r\n                                            settings: {\r\n                                                enabled: true\r\n                                            },\r\n                                            visibility: {\r\n                                                value: 'on', //'off', 'zoomIn', 'zoomOut'\r\n                                                enabled: true\r\n                                            },\r\n                                            remove: {\r\n                                                enabled: true\r\n                                            },\r\n                                            reload: {\r\n                                                enabled: true\r\n                                            }\r\n                                        },\r\n                                        state: 'error', // error, loading,\r\n                                        flags: {\r\n                                            type: {\r\n                                                visible: true,\r\n                                                value: 'feature'\r\n                                            },\r\n                                            data: {\r\n                                                visible: true,\r\n                                                value: 'table'\r\n                                            },\r\n                                            user: {\r\n                                                visible: true\r\n                                            },\r\n                                            scale: {\r\n                                                visible: true\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        type: 'layer',\r\n                                        name: 'Subgroup Layer 3',\r\n                                        layerType: 'image',\r\n                                        id: 5,\r\n                                        legend: [\r\n                                            {\r\n                                                icon: 'url',\r\n                                                name: 'something'\r\n                                            }\r\n                                        ],\r\n                                        toggles: {\r\n                                            metadata: {\r\n                                                enabled: true\r\n                                            },\r\n                                            settings: {\r\n                                                enabled: true\r\n                                            },\r\n                                            visibility: {\r\n                                                value: 'off', //'off', 'zoomIn', 'zoomOut'\r\n                                                enabled: true\r\n                                            }\r\n                                        },\r\n                                        state: 'default', // error, loading,\r\n                                        flags: {\r\n                                            type: {\r\n                                                visible: true,\r\n                                                value: 'image'\r\n                                            },\r\n                                            data: {\r\n                                                visible: false,\r\n                                                value: 'table'\r\n                                            },\r\n                                            user: {\r\n                                                visible: true\r\n                                            },\r\n                                            scale: {\r\n                                                visible: false\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                ],\r\n                                toggles: {\r\n                                    visibility: {\r\n                                        value: 'on', //'off', 'zoomIn', 'zoomOut'\r\n                                        enabled: true\r\n                                    }\r\n                                }\r\n                            },\r\n                            {\r\n                                type: 'layer',\r\n                                name: 'Layer Name 3',\r\n                                layerType: 'feature',\r\n                                id: 7,\r\n                                legend: [\r\n                                    {\r\n                                        icon: 'url',\r\n                                        name: 'something'\r\n                                    }\r\n                                ],\r\n                                toggles: {\r\n                                    metadata: {\r\n                                        enabled: true\r\n                                    },\r\n                                    settings: {\r\n                                        enabled: true\r\n                                    },\r\n                                    visibility: {\r\n                                        value: 'off', //'off', 'zoomIn', 'zoomOut'\r\n                                        enabled: true\r\n                                    }\r\n                                },\r\n                                state: 'default', // error, loading,\r\n                                flags: {\r\n                                    type: {\r\n                                        visible: true,\r\n                                        value: 'feature'\r\n                                    },\r\n                                    data: {\r\n                                        visible: false,\r\n                                        value: 'filter'\r\n                                    },\r\n                                    user: {\r\n                                        visible: false\r\n                                    },\r\n                                    scale: {\r\n                                        visible: false\r\n                                    }\r\n                                }\r\n                            }\r\n                        ],\r\n                        toggles: {\r\n                            visibility: {\r\n                                value: 'on', //'off', 'zoomIn', 'zoomOut'\r\n                                enabled: true\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        type: 'group',\r\n                        name: 'Image Layers',\r\n                        id: 1,\r\n                        expanded: false,\r\n                        items: [\r\n                            {\r\n                                type: 'layer',\r\n                                name: 'Group 2 Layer Name 1',\r\n                                layerType: 'image',\r\n                                id: 8,\r\n                                legend: [\r\n                                    {\r\n                                        icon: 'url',\r\n                                        name: 'something'\r\n                                    }\r\n                                ],\r\n                                toggles: {\r\n                                    metadata: {\r\n                                        enabled: true\r\n                                    },\r\n                                    settings: {\r\n                                        enabled: true\r\n                                    },\r\n                                    visibility: {\r\n                                        value: 'on', //'off', 'zoomIn', 'zoomOut'\r\n                                        enabled: true\r\n                                    }\r\n                                },\r\n                                state: 'default', // error, loading,\r\n                                flags: {\r\n                                    type: {\r\n                                        visible: true,\r\n                                        value: 'feature'\r\n                                    },\r\n                                    data: {\r\n                                        visible: true,\r\n                                        value: 'filter'\r\n                                    },\r\n                                    user: {\r\n                                        visible: false\r\n                                    },\r\n                                    scale: {\r\n                                        visible: false\r\n                                    }\r\n                                }\r\n                            }\r\n                        ],\r\n                        toggles: {\r\n                            visibility: {\r\n                                value: 'on', //'off', 'zoomIn', 'zoomOut'\r\n                                enabled: true\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            }, // config and bindable data\r\n\r\n            // method called by the toggles and flags set on the layer item\r\n            actions: {\r\n                toggleGroupVisibility\r\n            },\r\n\r\n            presets: null\r\n        };\r\n\r\n        // toc preset controls (toggles and flags displayed on the layer item)\r\n        service.presets = {\r\n            groupToggles: {\r\n                visibility: {\r\n                    action: service.actions.toggleGroupVisibility,\r\n                    icon: {\r\n                        on: 'action:visibility',\r\n                        off: 'action:visibility_off',\r\n                        zoomIn: 'action:zoom_in',\r\n                        zoomOut: 'action:zoom_out'\r\n                    },\r\n                    label: 'Toggle group visibility',\r\n                    tooltip: 'Group visibility tooltip'\r\n                }\r\n            },\r\n            toggles: {\r\n                extra: {\r\n                    icon: 'navigation:more_horiz',\r\n                    label: 'Extra',\r\n                    tooltip: 'Extra'\r\n                },\r\n                metadata: {\r\n                    icon: 'action:description',\r\n                    label: 'Metadata',\r\n                    tooltip: 'Metadata',\r\n                    action: toggleMetadata\r\n                },\r\n                query: {\r\n                    icon: 'communication:location_on',\r\n                    label: 'Toggle query',\r\n                    tooltip: 'query tooltip'\r\n                },\r\n                settings: {\r\n                    icon: 'image:tune',\r\n                    label: 'Settings',\r\n                    tooltip: 'Settings',\r\n                    action: toggleSettings\r\n                },\r\n                visibility: {\r\n                    icon: {\r\n                        on: 'action:visibility',\r\n                        off: 'action:visibility_off',\r\n                        zoomIn: 'action:zoom_in',\r\n                        zoomOut: 'action:zoom_out'\r\n                    },\r\n                    label: {\r\n                        off: 'Show layer',\r\n                        on: 'Hide layer',\r\n                        zoomIn: 'Zoom In to details',\r\n                        zoomOut: 'Zoom out to details'\r\n                    },\r\n                    tooltip: {\r\n                        off: 'Show layer',\r\n                        on: 'Hide layer',\r\n                        zoomIn: 'Zoom In to details',\r\n                        zoomOut: 'Zoom out to details'\r\n                    },\r\n                    action: toggleVisiblity\r\n                },\r\n                reload: {\r\n                    icon: 'navigation:refresh',\r\n                    label: 'Reload',\r\n                    tooltip: 'Reload'\r\n                },\r\n                remove: {\r\n                    icon: 'action:delete',\r\n                    label: 'Remove',\r\n                    tooltip: 'Remove'\r\n                }\r\n            },\r\n            flags: {\r\n                type: {\r\n                    icon: {\r\n                        feature: 'community:vector-square',\r\n                        image: 'image:photo',\r\n                        dynamic: 'action:settings'\r\n                    },\r\n                    label: {\r\n                        feature: 'Feature layer with <x> <points|polygons|lines>',\r\n                        image: 'Image layer',\r\n                        dynamic: 'Dynamic layer with <x> <points|polygons|lines>'\r\n                    },\r\n                    tooltip: {\r\n                        feature: 'Feature layer with <x> <points|polygons|lines>',\r\n                        image: 'Image layer',\r\n                        dynamic: 'Dynamic layer with <x> <points|polygons|lines>'\r\n                    }\r\n                },\r\n                scale: {\r\n                    icon: 'action:info',\r\n                    label: 'Toggle scale',\r\n                    tooltip: 'scale tooltip'\r\n                },\r\n                data: {\r\n                    icon: {\r\n                        table: 'community:table-large',\r\n                        filter: 'community:filter'\r\n                    },\r\n                    label: {\r\n                        table: 'Layer has viewable data',\r\n                        filter: 'Layer data is filtered'\r\n                    },\r\n                    tooltip: {\r\n                        table: 'Layer has viewable data',\r\n                        filter: 'Layer data is filtered'\r\n                    }\r\n                },\r\n                user: {\r\n                    icon: 'social:person',\r\n                    label: 'Toggle user',\r\n                    tooltip: 'user tooltip'\r\n                }\r\n            },\r\n            state: {\r\n                icon: {\r\n                    error: 'alert:error',\r\n                    reloading: 'navigation:refresh'\r\n                },\r\n                label: {\r\n                    error: 'I am Erorr',\r\n                    reloading: 'Updating'\r\n                },\r\n                tooltip: {\r\n                    error: 'I am Erorr',\r\n                    reloading: 'Updating'\r\n                }\r\n            }\r\n        };\r\n\r\n        // set layer control defaults\r\n        initLayers(service.data.items);\r\n\r\n        return service;\r\n\r\n        /**\r\n         * Temporary helper function to set values on layer toggle and flag objects.\r\n         */\r\n        function setLayerControlValues(control, template) {\r\n            control.icon = template.icon[control.value] || template.icon;\r\n            control.tooltip = template.tooltip[control.value] || template.tooltip;\r\n            control.label = template.label[control.value] || template.label;\r\n        }\r\n\r\n        // FIXME: updating config layer objects with default values for toggles and flags\r\n        // this should be done when applying defaults to the config file\r\n        function initLayers(items) {\r\n            /*jshint forin: false */\r\n\r\n            // ^ kills jshint error abour for .. in loop\r\n            for (let item of items) {\r\n                if (item.type === 'layer') {\r\n\r\n                    // loop through layer toggles\r\n                    for (let name in item.toggles) {\r\n                        let template = service.presets.toggles[name];\r\n                        let control = item.toggles[name];\r\n\r\n                        setLayerControlValues(control, template);\r\n                    }\r\n\r\n                    // loop through layer flags\r\n                    for (let name in item.flags) {\r\n                        let template = service.presets.flags[name];\r\n                        let control = item.flags[name];\r\n\r\n                        setLayerControlValues(control, template);\r\n                    }\r\n\r\n                } else if (item.type === 'group') {\r\n                    // loop through layer toggles\r\n                    for (let name in item.toggles) {\r\n\r\n                        let template = service.presets.groupToggles[name];\r\n                        let control = item.toggles[name];\r\n\r\n                        setLayerControlValues(control, template);\r\n                    }\r\n\r\n                    initLayers(item.items);\r\n                }\r\n            }\r\n        }\r\n\r\n        // FIXME: placeholder method for toggling group visibility\r\n        function toggleGroupVisibility(group, value) {\r\n            console.log('I am error', group);\r\n            let template = service.presets.groupToggles.visibility;\r\n            let control = group.toggles.visibility;\r\n\r\n            // visibility toggle logic goes here\r\n            const toggle = {\r\n                off: 'on',\r\n                on: 'off'\r\n            };\r\n\r\n            control.value = value || toggle[control.value];\r\n            setLayerControlValues(control, template);\r\n\r\n            for (let item of group.items) {\r\n                console.log('item', item);\r\n\r\n                if (item.type === 'group') {\r\n                    toggleGroupVisibility(item, control.value);\r\n                } else if (item.type === 'layer') {\r\n                    toggleVisiblity(item, control.value);\r\n                }\r\n            }\r\n        }\r\n\r\n        // FIXME: placeholder method for toggling visibility\r\n        // if 'value' is not specified, toggle\r\n        function toggleVisiblity(layer, value) {\r\n            let template = service.presets.toggles.visibility;\r\n            let control = layer.toggles.visibility;\r\n\r\n            // visibility toggle logic goes here\r\n            const toggle = {\r\n                off: 'on',\r\n                on: 'off',\r\n                zoomIn: 'zoomOut',\r\n                zoomOut: 'zoomIn'\r\n            };\r\n\r\n            control.value = value || toggle[control.value];\r\n\r\n            // FIXME: this should be done when applying defaults to the config file\r\n            setLayerControlValues(control, template);\r\n        }\r\n\r\n        // FIXME: placeholder method for toggling settings panel\r\n        function toggleSettings() {\r\n            // hacky way to toggle panels; replace with a sane methods\r\n            if ($state.current.name.indexOf('settings') === -1) {\r\n                $state.go('app.main.toc.side.settings', {}, {\r\n                    location: false\r\n                });\r\n            } else {\r\n                $state.go('app.main.toc', {}, {\r\n                    location: false\r\n                });\r\n            }\r\n        }\r\n\r\n        // FIXME: placeholder method for toggling metadata panel\r\n        function toggleMetadata() {\r\n            if ($state.current.name.indexOf('metadata') === -1) {\r\n                $state.go('app.main.toc.side.metadata', {}, {\r\n                    location: false\r\n                });\r\n            } else {\r\n                $state.go('app.main.toc', {}, {\r\n                    location: false\r\n                });\r\n            }\r\n        }\r\n    }\r\n})();\r\n",null,"(() => {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc function\r\n     * @name TocController\r\n     * @module app.ui.toc\r\n     * @description\r\n     *\r\n     * The `TocController` controller handles the layer selector (or toc) main panel.\r\n     * Right now it's hacked together for demo purposes.\r\n     * `TocController` has lots of ugly code to handle state switching. Should be rewritten.\r\n     */\r\n    angular\r\n        .module('app.ui.toc')\r\n        .controller('TocController', TocController);\r\n\r\n    function TocController($state, tocService) {\r\n        const self = this;\r\n\r\n        self.toggleFilters = toggleFilters;\r\n        self.toggleFiltersFull = toggleFiltersFull;\r\n\r\n        self.config = tocService.data;\r\n        self.presets = tocService.presets;\r\n\r\n        // temp function to open layer groups\r\n        self.toggleGroup = group => {\r\n            console.log('toggle group', group.name);\r\n            group.expanded = !group.expanded;\r\n        };\r\n\r\n        activate();\r\n\r\n        ///////////////\r\n\r\n        // hacky way to toggle panels;\r\n        // TODO: replace with a sane methods\r\n        function toggleFilters() {\r\n            if ($state.current.name.indexOf('filters') === -1) {\r\n                $state.go('app.main.toc.filters.default', {}, {\r\n                    location: false\r\n                });\r\n            } else {\r\n                $state.go('app.main.toc', {}, {\r\n                    location: false\r\n                });\r\n            }\r\n        }\r\n\r\n        // hacky way to toggle filters panel modes;\r\n        // TODO: replace with a sane methods\r\n        function toggleFiltersFull() {\r\n            const views = [\r\n                'app.main.toc.filters.default',\r\n                'app.main.toc.filters.default.minimized',\r\n                'app.main.toc.filters.default.full',\r\n                'app.main.toc.filters.default.attached'\r\n            ];\r\n\r\n            let index = (views.indexOf($state.current.name) + 1) % 4;\r\n\r\n            $state.go(views[index], {}, {\r\n                location: false\r\n            });\r\n        }\r\n\r\n        function activate() {\r\n\r\n        }\r\n    }\r\n})();\r\n","(() => {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc directive\r\n     * @name rvLayerItem\r\n     * @module app.ui.toc\r\n     * @description\r\n     *\r\n     * The `rvLayerItem` directive is a UI compoenent for a layer in the layer selector (toc).\r\n     *\r\n     * ```html\r\n     * <!-- `layer` attribute binds to the layer item in toc -->\r\n     * <rv-layer-item layer=\"item\"></rv-layer-item>\r\n     * ```\r\n     */\r\n    angular\r\n        .module('app.ui.toc')\r\n        .directive('rvLayerItem', rvLayerItem);\r\n\r\n    function rvLayerItem() {\r\n        const directive = {\r\n            restrict: 'E',\r\n            templateUrl: 'app/ui/toc/layer-item.html',\r\n            scope: {\r\n                layer: '='\r\n            },\r\n            controller: () => {},\r\n            controllerAs: 'self',\r\n            bindToController: true\r\n        };\r\n\r\n        return directive;\r\n    }\r\n})();\r\n","(() => {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc directive\r\n     * @name rvLayerItemFlag\r\n     * @module app.ui.toc\r\n     * @restrict E\r\n     * @description\r\n     *\r\n     * The `rvLayerItemFlag` directive is one of the layer flags: type, data, out-of-scale, user-added.\r\n     *\r\n     * ```html\r\n     * <!-- `name` attribute specifies the name of the flag; flag's control object is fetched from the layerItem directive -->\r\n     * <rv-layer-item-flag name=\"scale\"></rv-layer-item-flag>\r\n     * ```\r\n     *\r\n     */\r\n    angular\r\n        .module('app.ui.toc')\r\n        .directive('rvLayerItemFlag', rvLayerItemFlag);\r\n\r\n    function rvLayerItemFlag() {\r\n        const directive = {\r\n            require: '^rvLayerItem',\r\n            restrict: 'E',\r\n            templateUrl: 'app/ui/toc/layer-item-flag.html',\r\n            scope: {\r\n                name: '@'\r\n            },\r\n            link: link,\r\n            controller: () => {},\r\n            controllerAs: 'self',\r\n            bindToController: true\r\n        };\r\n\r\n        return directive;\r\n\r\n        ///////////\r\n\r\n        function link(scope, el, attr, ctrl) {\r\n            const self = scope.self;\r\n\r\n            // getting toggle object from the layer item controller directly using toggle's name\r\n            self.control = ctrl.layer.flags[self.name];\r\n        }\r\n    }\r\n})();\r\n","(() => {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc directive\r\n     * @name rvLayerItemButton\r\n     * @module app.ui.toc\r\n     * @restrict E\r\n     * @description\r\n     *\r\n     * The `rvLayerItemButton` directive is one of the layer toggle buttons: visiblity, settings, metadata, etc.\r\n     *\r\n     * ```html\r\n     * <!-- `name` attribute specifies the name of the toggle; toggle's control object and its template are fetched from the layerItem directive -->\r\n     * <rv-layer-item-button name=\"settings\"></rv-layer-item-button>\r\n     * ```\r\n     */\r\n    angular\r\n        .module('app.ui.toc')\r\n        .directive('rvLayerItemButton', rvLayerItemButton);\r\n\r\n    function rvLayerItemButton(tocService) {\r\n        const directive = {\r\n            require: '^rvLayerItem',\r\n            restrict: 'E',\r\n            templateUrl: 'app/ui/toc/layer-item-button.html',\r\n            scope: {\r\n                action: '&?',\r\n                name: '@'\r\n            },\r\n            link: link,\r\n            controller: () => {},\r\n            controllerAs: 'self',\r\n            bindToController: true\r\n        };\r\n\r\n        return directive;\r\n\r\n        ///////////\r\n\r\n        function link(scope, el, attr, ctrl) {\r\n            const self = scope.self;\r\n\r\n            // getting toggle object from the layer item controller directly using toggle's name\r\n            self.layer = ctrl.layer;\r\n            self.control = ctrl.layer.toggles[self.name];\r\n\r\n            // getting toggle's default action from the tocService using it's name\r\n            self.action = self.action || tocService.presets.toggles[self.name].action;\r\n        }\r\n    }\r\n})();\r\n","(() => {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc directive\r\n     * @name rvLayerGroupToggle\r\n     * @module app.ui.toc\r\n     * @restrict E\r\n     * @description\r\n     *\r\n     * The `rvLayerGroupToggle` directive is a toggle for a group of layer items.\r\n     *\r\n     */\r\n    angular\r\n        .module('app.ui.toc')\r\n        .directive('rvLayerGroupToggle', rvLayerGroupToggle);\r\n\r\n    function rvLayerGroupToggle() {\r\n        const directive = {\r\n            restrict: 'E',\r\n            require: '^ngController',\r\n            templateUrl: 'app/ui/toc/layer-group-toggle.html',\r\n            scope: {\r\n                group: '='\r\n            },\r\n            link: link,\r\n            controller: Controller,\r\n            controllerAs: 'self',\r\n            bindToController: true\r\n        };\r\n\r\n        return directive;\r\n\r\n        ///////////\r\n\r\n        /**\r\n         * Link function binds `toggleGroup` function from the `TocController` to directive's self.\r\n         * @param  {object} scope directive's scope\r\n         * @param  {object} el    element's node\r\n         * @param  {object} attr  element's attributes\r\n         * @param  {object} ctrl  reference to the `TocController`\r\n         */\r\n        function link(scope, el, attr, ctrl) {\r\n            const self = scope.self;\r\n\r\n            // call toggleGroup function on the tocController with the group object (see template)\r\n            self.toggleGroup = ctrl.toggleGroup;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Skeleton controller function.\r\n     */\r\n    function Controller() {\r\n\r\n        //const self = this;\r\n\r\n        activate();\r\n\r\n        ///////////\r\n\r\n        function activate() {\r\n\r\n        }\r\n    }\r\n})();\r\n","(() => {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc directive\r\n     * @name rvLayerGroupToggleButton\r\n     * @module app.ui.toc\r\n     * @restrict E\r\n     * @description\r\n     *\r\n     * The `rvLayerGroupToggleButton` directive is one of the layer group toggle buttons: visiblity, etc. So far we had a need for only group visibility toggle, but this can be used for more if needed.\r\n     *\r\n     * ```html\r\n     * <!-- `name` attribute specifies the name of the toggle; toggle's control object and its template are fetched from the layerGroupToggle directive -->\r\n     * <rv-layer-group-toggle-button name=\"visibility\"></rv-layer-group-toggle-button>\r\n     * ```\r\n     */\r\n    angular\r\n        .module('app.ui.toc')\r\n        .directive('rvLayerGroupToggleButton', rvLayerGroupToggleButton);\r\n\r\n    function rvLayerGroupToggleButton(tocService) {\r\n        const directive = {\r\n            require: '^rvLayerGroupToggle',\r\n            restrict: 'E',\r\n            templateUrl: 'app/ui/toc/layer-group-toggle-button.html',\r\n            scope: {\r\n                action: '&?',\r\n                name: '@'\r\n            },\r\n            link: link,\r\n            controller: () => {},\r\n            controllerAs: 'self',\r\n            bindToController: true\r\n        };\r\n\r\n        return directive;\r\n\r\n        ///////////\r\n\r\n        function link(scope, el, attr, ctrl) {\r\n            const self = scope.self;\r\n\r\n            // getting toggle object from the layer item controller directly using toggle's name\r\n            self.group = ctrl.group;\r\n            self.control = ctrl.group.toggles[self.name];\r\n\r\n            // getting toggle's default action from the tocService using it's name\r\n            self.action = self.action || tocService.presets.groupToggles[self.name].action;\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name app.ui.toolbox\r\n     * @description\r\n     *\r\n     * The `app.ui.toolbox` module contains toolbox panel.\r\n     */\r\n    angular\r\n        .module('app.ui.toolbox', []);\r\n})();\r\n","(() => {\r\n\r\n    /**\r\n     * @ngdoc function\r\n     * @name ToolboxController\r\n     * @module app.ui.toolbox\r\n     * @description\r\n     *\r\n     * The `ToolboxController` controller handles the metadata side panel.\r\n     */\r\n    angular\r\n        .module('app.ui.toolbox')\r\n        .controller('ToolboxController', ToolboxController);\r\n\r\n    /**\r\n     * `ToolboxController` skeleton controller.\r\n     */\r\n    function ToolboxController() {\r\n        //var self = this;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name app.ui.sidenav\r\n     * @description\r\n     *\r\n     * The `app.ui.sidenav` module contains side navigation panel and all accompanying directives.\r\n     */\r\n    angular\r\n        .module('app.ui.sidenav', []);\r\n})();\r\n","(() => {\r\n\r\n    /**\r\n     * @ngdoc service\r\n     * @name sideNavigationService\r\n     * @module app.ui.sidenav\r\n     *\r\n     * @description\r\n     * The `sideNavigationService` service provides access and controls the side navigation menu.\r\n     *\r\n     */\r\n    angular\r\n        .module('app.ui.sidenav')\r\n        .factory('sideNavigationService', sideNavigationService);\r\n\r\n    /**\r\n     * `sideNavigationService` exposes methods to close/open the side navigation panel.\r\n     * @param  {object} $mdSidenav\r\n     * @return {object} service object\r\n     */\r\n    function sideNavigationService($mdSidenav) {\r\n        /* jshint shadow:true */\r\n        /* jshint unused:false */\r\n        /*\r\n         * Open and close are native browser functions for opening and closing windows.\r\n         * To prevent JShint's \"already defined\" error, we use shadow and unused switches.\r\n         */\r\n        const service = {\r\n            open: open,\r\n            close: close,\r\n            toggle: toggle\r\n        };\r\n\r\n        return service;\r\n\r\n        ////////////////\r\n\r\n        /**\r\n         * Opens side navigation panel.\r\n         */\r\n        function open() {\r\n            $mdSidenav('left')\r\n                .open()\r\n                .then(function () {\r\n                    console.debug('close LEFT is done');\r\n                });\r\n        }\r\n\r\n        /**\r\n         * Closes side navigation panel.\r\n         */\r\n        function close() {\r\n            $mdSidenav('left')\r\n                .close()\r\n                .then(function () {\r\n                    console.debug('close LEFT is done');\r\n                });\r\n        }\r\n\r\n        // FIXME: write a proper toggle function\r\n        /**\r\n         * Toggles side navigation panel.\r\n         *\r\n         * @param  {object} argument [description]\r\n         */\r\n        function toggle(argument) {\r\n            console.log(argument);\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc directive\r\n     * @name rvMenuLink\r\n     * @module app.ui.sidenav\r\n     * @description\r\n     *\r\n     * The `rvMenuLink` directive is a wrapper around a button to provide some extra functionality (highlight currently selected item for example).\r\n     */\r\n    angular\r\n        .module('app.ui.sidenav')\r\n        .directive('rvMenuLink', rvMenuLink);\r\n\r\n    /* @ngInject */\r\n    /**\r\n     * `rvMenuLink` directive body.\r\n     * @return {object} directive body\r\n     */\r\n    function rvMenuLink() {\r\n        const directive = {\r\n            restrict: 'E',\r\n            templateUrl: 'app/ui/sidenav/menulink.html',\r\n            scope: {\r\n                section: '='\r\n            },\r\n            link: linkFunc,\r\n            controller: Controller,\r\n            controllerAs: 'self',\r\n            bindToController: true\r\n        };\r\n\r\n        return directive;\r\n\r\n        /**\r\n         * Skeleton link function.\r\n         */\r\n        function linkFunc() { //scope, el, attr, ctrl) {\r\n            //console.log(scope, el, attr, ctrl);\r\n        }\r\n    }\r\n\r\n    /* @ngInject */\r\n    /**\r\n     * Skeleton controller function.\r\n     */\r\n    function Controller() {\r\n        //let self = this;\r\n        //console.log('--', self.section);\r\n\r\n        activate();\r\n\r\n        ////////////////\r\n\r\n        function activate() {\r\n\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name app.ui.settings\r\n     * @description\r\n     *\r\n     * The `app.ui.settings` module contains the settings panel.\r\n     */\r\n    angular\r\n        .module('app.ui.settings', []);\r\n})();\r\n","(() => {\r\n\r\n    /**\r\n     * @ngdoc function\r\n     * @name SettingsController\r\n     * @module app.ui.settings\r\n     * @description\r\n     *\r\n     * The `SettingsController` controller handles the settings side panel.\r\n     * `SettingsController` skeleton controller.\r\n     */\r\n    angular\r\n        .module('app.ui.settings')\r\n        .controller('SettingsController', SettingsController);\r\n\r\n    function SettingsController() {\r\n        //var self = this;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name app.ui.panels\r\n     * @description\r\n     *\r\n     * The `app.ui.panels` module contains all the panel and pane templates and directives.\r\n     */\r\n    angular\r\n        .module('app.ui.panels', []);\r\n})();\r\n","(() => {\r\n\r\n    /**\r\n     * @ngdoc directive\r\n     * @name rvSidePanel\r\n     * @module app.ui.panels\r\n     * @description\r\n     *\r\n     * The `rvSidePanel` directive is an side panel outter container with a content plug view to allow for different content to be displayed.\r\n     */\r\n    angular\r\n        .module('app.ui.panels')\r\n        .directive('rvSidePanel', rvSidePanel);\r\n\r\n    /**\r\n     * `rvSidePanel` directive body.\r\n     * @return {object} directive body\r\n     */\r\n    function rvSidePanel() {\r\n        const directive = {\r\n            restrict: 'E',\r\n            templateUrl: 'app/ui/panels/side-panel.html',\r\n            scope: {},\r\n            link: linkFunc,\r\n            controller: Controller,\r\n            controllerAs: 'self',\r\n            bindToController: true\r\n        };\r\n\r\n        return directive;\r\n\r\n        /**\r\n         * Skeleton link function.\r\n         */\r\n        function linkFunc() { //scope, el, attr, ctrl) {\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Skeleton controller function.\r\n     */\r\n    function Controller() {\r\n        //const self = this;\r\n\r\n        activate();\r\n\r\n        //////////\r\n\r\n        function activate() {\r\n\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc directive\r\n     * @name rvMainPanel\r\n     * @module app.ui.panels\r\n     * @description\r\n     *\r\n     * The `rvMainPanel` directive is a outter panel container with a content plug view to allow for different content to be displayed.\r\n     */\r\n    angular\r\n        .module('app.ui.panels')\r\n        .directive('rvMainPanel', rvMainPanel);\r\n\r\n    /* @ngInject */\r\n    /**\r\n     * `rvMainPanel` directive body.\r\n     * @return {object} directive body\r\n     */\r\n    function rvMainPanel() {\r\n        const directive = {\r\n            restrict: 'E',\r\n            templateUrl: 'app/ui/panels/main-panel.html',\r\n            scope: {},\r\n            link: linkFunc,\r\n            controller: Controller,\r\n            controllerAs: 'self',\r\n            bindToController: true\r\n        };\r\n\r\n        return directive;\r\n\r\n        /**\r\n         * Skeleton link function.\r\n         */\r\n        function linkFunc() { //(scope, el, attr, ctrl) {\r\n\r\n        }\r\n    }\r\n\r\n    /* @ngInject */\r\n    /**\r\n     * Skeleton controller function.\r\n     */\r\n    function Controller() {\r\n        //var self = this;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n\r\n        }\r\n    }\r\n})();\r\n","(() => {\r\n\r\n    /**\r\n     * @ngdoc directive\r\n     * @name rvFiltersPanel\r\n     * @module app.ui.panels\r\n     * @description\r\n     *\r\n     * The `rvFiltersPanel` directive is a outer panel container with a content plug view to allow for different content to be displayed.\r\n     */\r\n    angular\r\n        .module('app.ui.panels')\r\n        .directive('rvFiltersPanel', rvFiltersPanel);\r\n\r\n    /**\r\n     * `rvFiltersPanel` directive body.\r\n     *\r\n     * @return {object} directive body\r\n     */\r\n    function rvFiltersPanel() {\r\n        const directive = {\r\n            restrict: 'E',\r\n            templateUrl: 'app/ui/panels/filters-panel.html',\r\n            scope: {},\r\n            link: linkFunc,\r\n            controller: Controller,\r\n            controllerAs: 'self',\r\n            bindToController: true\r\n        };\r\n\r\n        return directive;\r\n\r\n        /**\r\n         * Skeleton link function.\r\n         */\r\n        function linkFunc() { //(scope, el, attr, ctrl) {\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Skeleton controller function.\r\n     */\r\n    function Controller() {\r\n        //const self = this;\r\n\r\n        activate();\r\n\r\n        //////////\r\n\r\n        function activate() {\r\n\r\n        }\r\n    }\r\n})();\r\n","(() => {\r\n\r\n    /**\r\n     * @ngdoc directive\r\n     * @name rvContentPane\r\n     * @module app.ui.panels\r\n     * @description\r\n     *\r\n     * The `rvContentPane` directive is a panel inner container holding the panel's content.\r\n     *\r\n     */\r\n    angular\r\n        .module('app.ui.panels')\r\n        .directive('rvContentPane', rvContentPane);\r\n\r\n    /**\r\n     * `rvContentPane` directive body.\r\n     *\r\n     * @return {object} directive body\r\n     */\r\n    function rvContentPane() {\r\n        const directive = {\r\n            restrict: 'E',\r\n            require: '^ngController', // require plug controller\r\n            templateUrl: 'app/ui/panels/content-pane.html',\r\n            scope: {\r\n                title: '@', // binds to the evaluated dom property\r\n                titleStyle: '@'\r\n            },\r\n            transclude: true,\r\n            link: link,\r\n            controller: Controller,\r\n            controllerAs: 'self',\r\n            bindToController: true\r\n        };\r\n\r\n        return directive;\r\n\r\n        /**\r\n         * Binds the `closePanel` method from the panel plug controller.\r\n         */\r\n        function link(scope, el, attr, ctrl) {\r\n            const self = scope.self;\r\n            self.closePanel = ctrl.closePanel;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Skeleton controller function.\r\n     */\r\n    function Controller() {\r\n\r\n        //const self = this;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name app.ui.mapnav\r\n     * @description\r\n     *\r\n     * The `app.ui.mapnav` module contains the map navigation component.\r\n     */\r\n    angular\r\n        .module('app.ui.mapnav', []);\r\n})();\r\n","(() => {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc service\r\n     * @name mapNavigationService\r\n     * @module app.ui.mapnav\r\n     *\r\n     * @description\r\n     * The `mapNavigationService` service provides access to map navgiation compoent's actions like `zoom`, `geolocation`, `full extent` and `history extent`.\r\n     *\r\n     */\r\n    angular\r\n        .module('app.ui.mapnav')\r\n        .factory('mapNavigationService', mapNavigationService);\r\n\r\n    /* @ngInject */\r\n    /**\r\n     * `mapNavigationService` exposes zoom and pan methods as well as controls available in the map navigation component.\r\n     *\r\n     * @return {object} service object\r\n     */\r\n    function mapNavigationService() {\r\n        const service = {\r\n            // FIXME: this config snippet should obvisouly come from config service\r\n            config: {\r\n                zoom: 'buttons', // 'all', 'slider', 'buttons'\r\n                extra: [\r\n                    'geoLocation',\r\n                    'marquee',\r\n                    'home',\r\n                    'history'\r\n                ]\r\n            },\r\n            controls: {},\r\n            zoomIn: zoomIn,\r\n            zoomOut: zoomOut,\r\n            zoomTo: zoomTo\r\n        };\r\n\r\n        // navigation controls presets\r\n        service.controls = {\r\n            zoom: {\r\n                inButton: {\r\n                    label: 'Zoom in',\r\n                    icon: 'content:add',\r\n                    tooltip: 'Zoom in',\r\n                    call: zoomIn\r\n                },\r\n                slider: {\r\n\r\n                    // TODO: add slider properties when we find a suitable slider lib\r\n                },\r\n                outButton: {\r\n                    label: 'Zoom out',\r\n                    icon: 'content:remove',\r\n                    tooltip: 'Zoom out',\r\n                    call: zoomOut\r\n                }\r\n            },\r\n            extra: {\r\n                geoLocation: {\r\n                    label: 'Your Location',\r\n                    icon: 'maps:my_location',\r\n                    tooltip: 'Your Location',\r\n                    call: function () {} // FIXME: user proper call\r\n                },\r\n                marquee: {\r\n                    label: '???',\r\n                    icon: 'action:search',\r\n                    tooltip: '???',\r\n                    call: function () {} // FIXME: user proper call\r\n                },\r\n                home: {\r\n                    label: 'Canada',\r\n                    icon: 'action:home',\r\n                    tooltip: 'Canada',\r\n                    call: function () {} // FIXME: user proper call\r\n                },\r\n                history: {\r\n                    label: 'History',\r\n                    icon: 'action:history',\r\n                    tooltip: 'History',\r\n                    call: function () {} // FIXME: user proper call\r\n                }\r\n            }\r\n        };\r\n\r\n        return service;\r\n\r\n        function zoomIn(by = 1) {\r\n            console.log('Zoom in by', by);\r\n\r\n            // FIXME: user proper call\r\n        }\r\n\r\n        function zoomOut(by = 1) {\r\n            console.log('Zoom out by', by);\r\n\r\n            // FIXME: user proper call\r\n        }\r\n\r\n        function zoomTo(level) {\r\n            console.log('Zoom to the level:', level);\r\n\r\n            // FIXME: user proper call\r\n        }\r\n    }\r\n})();\r\n","(() => {\r\n\r\n    /**\r\n     * @ngdoc function\r\n     * @name MapNavigationController\r\n     * @module app.ui.mapnav\r\n     * @description\r\n     *\r\n     * The `MapNavigationController` controller handles the map navigation component.\r\n     */\r\n    angular\r\n        .module('app.ui.mapnav')\r\n        .controller('MapNavigationController', MapNavigationController);\r\n\r\n    /**\r\n     * `MapNavigationController` directive body.\r\n     *\r\n     * @param {object} mapNavigationService\r\n     */\r\n    function MapNavigationController(mapNavigationService) {\r\n        const self = this;\r\n\r\n        // expose navigation service to the template\r\n        self.service = mapNavigationService;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n\r\n        }\r\n    }\r\n})();\r\n","(() => {\r\n\r\n    /**\r\n     * @ngdoc directive\r\n     * @name rvMapnavButton\r\n     * @module app.ui.mapnav\r\n     * @description\r\n     *\r\n     * The `rvMapnavButton` directive is a map navigation component button.\r\n     *\r\n     */\r\n    angular\r\n        .module('app.ui.mapnav')\r\n        .directive('rvMapnavButton', rvMapnavButton);\r\n\r\n    /**\r\n     * `rvMapnavButton` directive body.\r\n     *\r\n     * @return {object} directive body\r\n     */\r\n    function rvMapnavButton() {\r\n        const directive = {\r\n            restrict: 'E',\r\n            templateUrl: 'app/ui/mapnav/mapnav-button.html',\r\n            scope: {\r\n                control: '=' // binds `control` attribute to the scope;\r\n            },\r\n            link: linkFunc,\r\n            controller: Controller,\r\n            controllerAs: 'self',\r\n            bindToController: true\r\n        };\r\n\r\n        return directive;\r\n\r\n        /**\r\n         * Skeleton link function.\r\n         */\r\n        function linkFunc() { //scope, el, attr, ctrl) {\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Skeleton controller function.\r\n     */\r\n    function Controller() {\r\n        //var self = this;\r\n\r\n        ///////////\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name app.ui.metadata\r\n     * @description\r\n     *\r\n     * The `app.ui.metadata` module contains the metadata panel.\r\n     */\r\n    angular\r\n        .module('app.ui.metadata', []);\r\n})();\r\n","(() => {\r\n\r\n    /**\r\n     * @ngdoc function\r\n     * @name MetadataController\r\n     * @module app.ui.metadata\r\n     * @description\r\n     *\r\n     * The `MetadataController` controller handles the metadata side panel.\r\n     */\r\n    angular\r\n        .module('app.ui.metadata')\r\n        .controller('MetadataController', MetadataController);\r\n\r\n    /**\r\n     * `MetadataController` skeleton controller.\r\n     */\r\n    function MetadataController() {\r\n        //var self = this;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name app.ui.filters\r\n     * @description\r\n     *\r\n     * The `app.ui.filters` module contains the filters and datatable panel.\r\n     */\r\n    angular\r\n        .module('app.ui.filters', []);\r\n})();\r\n","(() => {\r\n\r\n    /**\r\n     * @ngdoc directive\r\n     * @name rvFiltersDefault\r\n     * @module app.ui.filters\r\n     * @description\r\n     *\r\n     * The `rvFiltersDefault` directive is a filters and datatable panel component.\r\n     *\r\n     */\r\n    angular\r\n        .module('app.ui.filters')\r\n        .directive('rvFiltersDefault', rvFiltersDefault);\r\n\r\n    /**\r\n     * `rvFiltersDefault` directive body.\r\n     *\r\n     * @return {object} directive body\r\n     */\r\n    function rvFiltersDefault() {\r\n        const directive = {\r\n            restrict: 'E',\r\n            templateUrl: 'app/ui/filters/filters-default.html',\r\n            scope: {},\r\n            link: linkFunc,\r\n            controller: Controller,\r\n            controllerAs: 'self',\r\n            bindToController: true\r\n        };\r\n\r\n        return directive;\r\n\r\n        /**\r\n         * Skeleton link function.\r\n         */\r\n        function linkFunc() { //scope, el, attr, ctrl) {\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Skeleton controller function with test message.\r\n     */\r\n    function Controller() {\r\n        var self = this;\r\n        self.message = 'Can you see me?';\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name app.ui.common\r\n     * @description\r\n     *\r\n     * The `app.ui.common` module contains reusable, non-component specific attribute directives like `rv-morph` (think of `ng-show` or `ng-hide` directives) and JS-based animation definitions to be used on `leave`, `enter`, etc. events (https://docs.angularjs.org/api/ngAnimate#javascript-based-animations).\r\n     */\r\n    angular\r\n        .module('app.ui.common', []);\r\n})();\r\n","/* global Ease, BezierEasing, TweenLite */\r\n(() => {\r\n    'use strict';\r\n\r\n    const RV_TOGGLE_SLIDE_DURATION = 0.3;\r\n    const RV_SWIFT_IN_OUT_EASE = new Ease(BezierEasing(0.35, 0, 0.25, 1));\r\n\r\n    /**\r\n     * @ngdoc service\r\n     * @name rvToggleSlide\r\n     * @module app.ui.common\r\n     * @description\r\n     *\r\n     * The `rvToggleSlide` is an animation. It animates `enter` and `leave` events for `ng-if`; `addClass` and `removeClass`, for `ng-if` and `ng-show` directives on any node by `sliding` it up or down, animating its height, when its added or removed from the dom.\r\n     *\r\n     * ```html\r\n     * <div class=\"rv-toggle-slide\" ng-show=\"value\"></div>\r\n     * <div class=\"rv-toggle-slide\" ng-hide=\"value\"></div>\r\n     *\r\n     * <div class=\"rv-toggle-slide\" ng-if=\"value\"></div>\r\n     * ```\r\n     */\r\n    angular\r\n        .module('app.ui.common')\r\n        .animation('.rv-toggle-slide', toggleOpenBuilder());\r\n\r\n    // TODO: add option to change duration through an attribute\r\n\r\n    function toggleOpenBuilder() {\r\n        const service = {\r\n            enter: toggleOpen,\r\n            leave: toggleClose,\r\n            addClass: ngShowHideBootstrap(true),\r\n            removeClass: ngShowHideBootstrap(false)\r\n        };\r\n\r\n        return () => service;\r\n\r\n        ////////\r\n\r\n        /**\r\n         * Animates `leave` event by `sliding` the element down, animating its height from 0 to full.\r\n         * @param  {object}   element  node\r\n         * @param  {callback} callback\r\n         */\r\n        function toggleOpen(element, callback) {\r\n            let targetHeight = open ? getTargetHeight(element) : 0;\r\n\r\n            TweenLite.fromTo(element, RV_TOGGLE_SLIDE_DURATION, {\r\n                height: 0\r\n            }, {\r\n                height: targetHeight,\r\n                ease: RV_SWIFT_IN_OUT_EASE,\r\n                onComplete: () => {\r\n                    element.css('height', 'auto');\r\n                    callback();\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Animates `leave` event by `sliding` the element up, animating its height from full to 0.\r\n         * @param  {object}   element  node\r\n         * @param  {callback} callback\r\n         */\r\n        function toggleClose(element, callback) {\r\n            TweenLite.to(element, RV_TOGGLE_SLIDE_DURATION, {\r\n                height: 0,\r\n                ease: RV_SWIFT_IN_OUT_EASE,\r\n                onComplete: () => callback()\r\n            });\r\n        }\r\n\r\n        /**\r\n         * When using `ng-show` or `ng-hide`, animation is triggered on `addClass`, `removeClass`, and `setClass`. See more here: https://docs.angularjs.org/api/ng/service/$animate#addClass\r\n         *\r\n         * @param  {boolean} addClass a flag indicating whether the `ng-hide` class was added or removed\r\n         * @return {function}        bootstrapped open or close function\r\n         */\r\n        function ngShowHideBootstrap(addClass) {\r\n            return (element, cssClass, callback) => {\r\n                // both `ng-hide` and `ng-show` use `ng-hide` css class\r\n                const action = {\r\n                    false: toggleOpen,\r\n                    true: toggleClose\r\n                };\r\n\r\n                // pick the action to perform;\r\n                // `addClass` flips the action depending on whether the class is added or removed\r\n                action[addClass](element, callback);\r\n            };\r\n        }\r\n\r\n        /**\r\n         * Returns the height of the target element.\r\n         * @param  {object} element node\r\n         */\r\n        function getTargetHeight(element) {\r\n            // reset height to default if animating from hidden element as it's initial height can be 0 set by preceding hide animation\r\n\r\n            return element\r\n                .css('height', 'auto')\r\n                .prop('clientHeight');\r\n        }\r\n    }\r\n})();\r\n","/* global Ease, BezierEasing, TweenLite */\r\n\r\n(() => {\r\n    'use strict';\r\n\r\n    const RV_PANEL_CLASS = '.panel';\r\n    const RV_PLUG_SLIDE_DURATION = 0.3;\r\n    const RV_PLUG_SLIDE_ID_DATA = 'rv-plug-slide-id';\r\n    const RV_SWIFT_IN_OUT_EASE = new Ease(BezierEasing(0.35, 0, 0.25, 1));\r\n\r\n    let sequences = {}; // store animation sequences\r\n    let counter = 1; // simple id for animation sequences\r\n\r\n    /**\r\n     * @ngdoc service\r\n     * @name rvPlugSlide\r\n     * @module app.ui.common\r\n     * @description\r\n     *\r\n     * The `rvPlugSlide` is an animation. It animates enter and leave events on view plugs by applying transitions to plugs' panels. It will not work with just any node.\r\n     *\r\n     * ```html\r\n     * <!-- plug's panel will be animated by sliding it down from -100% of its height relative to itself -->\r\n     * <div class=\"rv-plug-slide-down\"></div>\r\n     *\r\n     * <!-- plug's panel will be animated by sliding it down from -100% of its height relative to the app's root element -->\r\n     * <div class=\"rv-plug-slide-down-grand\"></div>\r\n     *\r\n     */\r\n    const module = angular.module('app.ui.common');\r\n    const directions = ['down', 'right', 'up', 'left'];\r\n    const animationTypes = { slide: makeSlideAnim, fade: makeFadeAnim };\r\n\r\n    // register animations, loops through directions and types\r\n    directions.forEach((direction, index) =>\r\n        Object.keys(animationTypes).forEach(type => {\r\n            module\r\n                .animation(`.rv-plug-${type}-${direction}`,\r\n                    animationBuilder(type, index, false))\r\n                .animation(`.rv-plug-${type}-${direction}-grand`,\r\n                    animationBuilder(type, index, true));\r\n        }));\r\n\r\n    // TODO: add option to change duration through an attribute\r\n    // TODO: add option to add delay before animation starts through an attribute\r\n\r\n    /**\r\n     * Animates plug's panel.\r\n     *\r\n     * @param  {String}  type        type of animation (fade, slide, etc.)\r\n     * @param  {Number}  direction   direction of movement (0 - down, 1 - right, 2 - up, 3 - left)\r\n     * @param  {Bool}    grand       type of shift (see top comment)\r\n     * @return {Object}  service     object with `enter` and `leave` functions\r\n     */\r\n    function animationBuilder(type, direction, grand) {\r\n        return $rootElement => {\r\n            'ngInject';\r\n            const func = animationTypes[type];\r\n            return {\r\n                enter: func($rootElement, direction, false, grand),\r\n                leave: func($rootElement, direction, true, grand)\r\n            };\r\n        };\r\n    }\r\n\r\n    /**\r\n    * Creates Fade animations\r\n    *\r\n    * @param  {Object}   $rootElement\r\n    * @param  {Number}   direction   direction of movement (0 - down, 1 - right, 2 - up, 3 - left)\r\n    * @param  {Bool}     reverse     whether to reverse the animation direction\r\n    * @param  {Bool}     grand       type of shift (see top comment)\r\n    * @param  {Object}   element     plug node\r\n    * @param  {Function} callback    callback from angular\r\n    */\r\n    function makeFadeAnim($rootElement, direction, reverse, grand) {\r\n        return (element, callback) => {\r\n            let duration = RV_PLUG_SLIDE_DURATION;\r\n            let shift = calculateShift($rootElement, element, direction, grand);\r\n\r\n            let start = {\r\n                x: shift.x,\r\n                y: shift.y,\r\n                z: 0,\r\n                opacity: 0\r\n            };\r\n\r\n            let end = {\r\n                x: '0%',\r\n                y: '0%',\r\n                z: 0,\r\n                opacity: 1\r\n            };\r\n\r\n            let config = {\r\n                ease: RV_SWIFT_IN_OUT_EASE,\r\n                onComplete: cleanup(element, callback),\r\n                clearProps: 'transform' // http://tiny.cc/dbuh4x; http://tiny.cc/wbuh4x\r\n            };\r\n\r\n            buildTween(element, callback, duration, reverse, start, end, config);\r\n        };\r\n    }\r\n\r\n    /**\r\n    * Creates Slide animations\r\n    *\r\n    * @param  {Object}   $rootElement\r\n    * @param  {Number}   direction   direction of movement (0 - down, 1 - right, 2 - up, 3 - left)\r\n    * @param  {Bool}     reverse     whether to reverse the animation direction\r\n    * @param  {Bool}     grand       type of shift (see top comment)\r\n    * @param  {Object}   element     plug node\r\n    * @param  {Function} callback    callback from angular\r\n    */\r\n    function makeSlideAnim($rootElement, direction, reverse, grand) {\r\n        return (element, callback) => {\r\n            let duration = RV_PLUG_SLIDE_DURATION;\r\n            let shift = calculateShift($rootElement, element, direction, grand);\r\n\r\n            let start = {\r\n                x: shift.x,\r\n                y: shift.y,\r\n                z: 0\r\n            };\r\n\r\n            let end = {\r\n                x: '0%',\r\n                y: '0%',\r\n                z: 0\r\n            };\r\n\r\n            let config = {\r\n                ease: RV_SWIFT_IN_OUT_EASE,\r\n                onComplete: cleanup(element, callback),\r\n                clearProps: 'transform' // http://tiny.cc/dbuh4x; http://tiny.cc/wbuh4x\r\n            };\r\n\r\n            buildTween(element, callback, duration, reverse, start, end, config);\r\n        };\r\n    }\r\n\r\n    /**\r\n    * Retrieves the panel size of an element, based on animation direction\r\n    *\r\n    * @param  {Object}  element     plug node\r\n    * @param  {Number}  direction   direction of movement (0 - down, 1 - right, 2 - up, 3 - left)\r\n    * @return {Number}  size        size of relevant dimension\r\n    */\r\n    function getPanelSize(element, direction) {\r\n        if (direction % 2 === 0) { //Down, Up\r\n            return element.find(RV_PANEL_CLASS).outerHeight(true);\r\n        } else { //Left, Right\r\n            return element.find(RV_PANEL_CLASS).outerWidth(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Calculates the delta needed for a grand animation\r\n    *\r\n    * @param  {Object}  $rootElement\r\n    * @param  {Object}  element      plug node\r\n    * @param  {Number}  direction    direction of movement (0 - down, 1 - right, 2 - up, 3 - left)\r\n    * @return {Number}  delta        amount the panel should move\r\n    */\r\n    function deltaHelper($rootElement, element, direction) {\r\n        let delta = 10;\r\n\r\n        if (direction === 0) { //DOWN\r\n            delta += element.position().top + getPanelSize(element, direction);\r\n        } else if (direction === 1) { //RIGHT\r\n            delta += element.position().left + getPanelSize(element, direction);\r\n        } else if (direction === 2) { //UP\r\n            // not adding on to 10 because there is no drop shadow above the panel\r\n            delta = $rootElement.outerHeight(true) - element.position().top;\r\n        } else { //LEFT\r\n            delta += $rootElement.outerWidth(true) - element.position().left;\r\n        }\r\n\r\n        return delta;\r\n    }\r\n\r\n    /**\r\n    * Calculates the amount to translate the panel\r\n    *\r\n    * @param  {Object}  $rootElement\r\n    * @param  {Object}  element     plug node\r\n    * @param  {Number}  direction   direction of movement (0 - down, 1 - right, 2 - up, 3 - left)\r\n    * @param  {Bool}    grand       type of shift (see top comment)\r\n    * @return {Object}  shift       amount to move the panel\r\n    */\r\n    function calculateShift($rootElement, element, direction, grand) {\r\n        const shift = {\r\n            x: 0,\r\n            y: 0\r\n        };\r\n\r\n        const travel = {\r\n            0: 'y',\r\n            1: 'x',\r\n            2: 'y',\r\n            3: 'x'\r\n        };\r\n\r\n        const modifier = {\r\n            0: '-',\r\n            1: '-',\r\n            2: '',\r\n            3: ''\r\n        };\r\n\r\n        let delta = grand ? deltaHelper($rootElement, element, direction).toString() : '100%';\r\n\r\n        // based on direction, set starting `x` or `y` attributes of the node\r\n        shift[travel[direction]] = modifier[direction] + delta;\r\n\r\n        return shift;\r\n    }\r\n\r\n    /**\r\n    * Deletes the element's current animation sequence and calls angulars callback\r\n    *\r\n    * @param  {Object}   element    plug node\r\n    * @param  {Function} callback   callback from angular\r\n    */\r\n    function cleanup(element, callback) {\r\n        return () => {\r\n            delete sequences[element.data(RV_PLUG_SLIDE_ID_DATA)];\r\n            callback();\r\n        };\r\n    }\r\n\r\n    /**\r\n    * Handles building the animation tween\r\n    *\r\n    * @param  {Object}   element    plug node\r\n    * @param  {Function} callback   callback from angular\r\n    * @param  {Number}   duration   length of animation in seconds\r\n    * @param  {Bool}     reverse    whether to reverse the animation direction\r\n    * @param  {Object}   start      beginning state for the animation\r\n    * @param  {Object}   end        end state for the animation\r\n    * @param  {Object}   config     additional flags for the actual end state\r\n    */\r\n    function buildTween(element, callback, duration, reverse, start, end, config) {\r\n        // Check if a sequence is already tied to the element, if so reverse it.\r\n        // (if the animation still exists it must be ongoing)\r\n        let sequence = sequences[element.data(RV_PLUG_SLIDE_ID_DATA)];\r\n        if (sequence) {\r\n            sequence.reverse().eventCallback('onReverseComplete', cleanup(element, callback));\r\n            return;\r\n        }\r\n\r\n        // Build and store the tween\r\n        let id = counter++;\r\n        sequences[id] = TweenLite.fromTo(element.find(RV_PANEL_CLASS), duration,\r\n            reverse ? end : start,\r\n            angular.extend({}, reverse ? start : end, config));\r\n\r\n        element.data(RV_PLUG_SLIDE_ID_DATA, id);\r\n    }\r\n})();\r\n","/* global TweenLite */\r\n(() => {\r\n\r\n    /**\r\n     * @ngdoc directive\r\n     * @name rvMorph\r\n     * @module app.ui.common\r\n     * @restrict A\r\n     * @description\r\n     *\r\n     * The `rvMorph` directive animates the given HTML element from one CSS class to another provided to the `rvMorph` attribute. The element is morphed by using GSAP animation library. Only class changes are animated - the first class is applied immediately; when removed, applied immediately as well.\r\n     *\r\n     * ```html\r\n     * <!-- when $scope.myValue changes from `value1` to `value2`, the transition is animated -->\r\n     * <div rv-morph=\"myValue\"></div>\r\n     * ```\r\n     * The value of `rv-morph` attribute is added to the CSS classes of the element after transition completes; the old class value is removed.\r\n     *\r\n     * Optional `rv-morph-speed` attribute can be added to the element to change the animation speed from the default 0.3s.\r\n     *\r\n     * ```html\r\n     * <!-- transition will take 10 seconds -->\r\n     * <div rv-morph=\"myValue\" rv-morph-speed=\"10\"></div>\r\n     * ```\r\n     *\r\n     * `rv-morph` should not be applied to elements that are animated by different means (ngAnimate or other CSS animations), this may interfere with applying of CSS classes.\r\n     */\r\n    angular\r\n        .module('app.ui.common')\r\n        .directive('rvMorph', rvMorph);\r\n\r\n    /**\r\n     * `rvMorph` directive body.\r\n     *\r\n     * @return {object} directive body\r\n     */\r\n    function rvMorph() {\r\n        const directive = {\r\n            restrict: 'A',\r\n            link: linkFunc\r\n        };\r\n        const morphSpeed = 0.3;\r\n\r\n        return directive;\r\n\r\n        /**\r\n         * Directive's link function. Sets up a watch on the `ng-morph` attribute and triggers the animation on attribute change.\r\n         * Initial setting and nulling of the attribute causes immediate change with no animation.\r\n         *\r\n         * @param  {Object} scope directive's scope\r\n         * @param  {Object} el    element reference\r\n         * @param  {Object} attr  element's attributes\r\n         */\r\n        function linkFunc(scope, el, attr) {\r\n            let classReg;\r\n            let toClass;\r\n\r\n            scope.$watch(attr.rvMorph, (newClass, oldClass) => {\r\n                // replace old class name with new on the element to get a morph target\r\n                classReg = new RegExp('(^| )' + oldClass + '($| )', 'i');\r\n                toClass = el.attr('class')\r\n                    .replace(classReg, '$1' + newClass + '$2');\r\n\r\n                // animate only on class change\r\n                if (newClass !== oldClass) {\r\n                    TweenLite.to(el, attr.rvMorphSpeed || morphSpeed, {\r\n                        className: toClass,\r\n                        onComplete: () => {\r\n                            // Remove old class from the element after morph is completed.\r\n                            el.removeClass(oldClass);\r\n                            console.log('morph completed');\r\n                        }\r\n                    });\r\n                } else {\r\n                    el.addClass(newClass);\r\n                }\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(() => {\n    'use strict';\n\n    /**\n     * @ngdoc directive\n     * @name rvTruncate\n     * @module app.ui.common\n     * @restrict EA\n     * @description\n     *\n     * The `rvTruncate` directive description.\n     *\n     */\n    angular\n        .module('app.ui.common')\n        .directive('rvTruncate', rvTruncate);\n\n    function rvTruncate($timeout) {\n        const directive = {\n            restrict: 'A',\n            scope: {\n                ngBind: '='\n            },\n            link: link\n        };\n\n        return directive;\n\n        ///////////\n\n        function link(scope, el, attr, ctrl) {\n            console.log(scope, el, attr, ctrl, $timeout);\n            /*\n            let exclusionWidth = 1;\n\n            $timeout(() => {\n                console.log(isOverflowed(el, true));\n\n                let string = scope.ngBind;\n                let array = string.split('');\n\n                for(let s in array) {\n                    array.pop()\n                    el.text(array.join(''));\n\n                    if (!isOverflowed(el, true)) {\n                        break;\n                    }\n                }\n            }, 100);\n\n            /**\n             * Test if element has overflow of text beyond height or max-height\n             */\n            /*function isOverflowed(element) {\n                return element[0].clientWidth > element.parent()[0].clientWidth;\n            }*/\n        }\n    }\n})();\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name app.ui.appbar\r\n     * @description\r\n     *\r\n     * The `app.ui.appbar` module contains the application bar.\r\n     */\r\n    angular\r\n        .module('app.ui.appbar', []);\r\n})();\r\n","(() => {\r\n\r\n    /**\r\n     * @ngdoc function\r\n     * @name AppbarController\r\n     * @module app.ui.appbar\r\n     * @description\r\n     *\r\n     * The `AppbarController` controller handles the main application bar.\r\n     * Right now it's hacked together for demo purposes.\r\n     */\r\n    angular\r\n        .module('app.ui.appbar')\r\n        .controller('AppbarController', AppbarController);\r\n\r\n    /**\r\n     * `AppbarController` has lots of garbage code so far, needed to show how the panels are toggled. It should be moved to service.\r\n     *\r\n     * @param {object} layoutService\r\n     * @param {object} $state\r\n     */\r\n    function AppbarController(layoutService, $state) {\r\n        const self = this;\r\n\r\n        self.layoutService = layoutService;\r\n        self.toggleToc = toggleToc;\r\n        self.toggleToolbox = toggleToolbox;\r\n\r\n        // FIXME: hacky method of highlighting currently selected button; needs replacement\r\n        self.tocSelected = false;\r\n        self.toolboxSelected = false;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n\r\n        }\r\n\r\n        // hacky way to toggle panels;\r\n        // FIXME: replace with a sane method\r\n        function toggleToc() {\r\n            //var stateName = 'app.filters.default';\r\n            var stateName = 'app.main.toc';\r\n\r\n            if ($state.current.name.indexOf(stateName) === -1) {\r\n                $state.go(stateName, {}, {\r\n                    location: false\r\n                });\r\n                self.tocSelected = true;\r\n                self.toolboxSelected = false;\r\n            } else {\r\n                $state.go('app', {}, {\r\n                    location: false\r\n                });\r\n                self.tocSelected = false;\r\n            }\r\n        }\r\n\r\n        function toggleToolbox() {\r\n            var stateName = 'app.main.toolbox';\r\n\r\n            //var stateName = 'app.filters.default';\r\n\r\n            if ($state.current.name.indexOf(stateName) === -1) {\r\n                $state.go(stateName, {}, {\r\n                    location: false\r\n                });\r\n                self.tocSelected = false;\r\n                self.toolboxSelected = true;\r\n            } else {\r\n                $state.go('app', {}, {\r\n                    location: false\r\n                });\r\n                self.toolboxSelected = false;\r\n            }\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name app.common.router\r\n     * @requires ui.router\r\n     * @description\r\n     *\r\n     * The `common.router` provides support to handling `ui.router` states and transitions.\r\n     *\r\n     */\r\n    angular\r\n        .module('app.common.router', [\r\n            'ui.router'\r\n        ]);\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc provider\r\n     * @name statehelperConfig\r\n     * @module app.common.router\r\n     * @description\r\n     *\r\n     * The `statehelperConfig` provider is used to configure `statehelper` before it's initialized.\r\n     *\r\n     * Must configure via the statehelperConfigProvider in core.config.js\r\n     */\r\n    /**\r\n     * @ngdoc service\r\n     * @name statehelper\r\n     * @module app.common.router\r\n     * @requires statehelperConfig\r\n     * @description\r\n     *\r\n     * The `statehelper` services supports adding additional states to the global state tree from other modules.\r\n     * It is also responsible for handling routing errors (coming soon).\r\n     */\r\n    angular\r\n        .module('app.common.router')\r\n        .provider('statehelperConfig', statehelperConfig)\r\n        .factory('statehelper', statehelper);\r\n\r\n    function statehelperConfig() {\r\n        /* jshint validthis:true */\r\n        this.config = {\r\n            // These are the properties we need to set\r\n            // $stateProvider: undefined\r\n            // resolveAlways: {ready: function(){ } }\r\n        };\r\n\r\n        this.$get = function () {\r\n            return {\r\n                config: this.config\r\n            };\r\n        };\r\n    }\r\n\r\n    // TODO: add routing error handling\r\n    function statehelper(statehelperConfig) {\r\n        var $stateProvider = statehelperConfig.config.$stateProvider;\r\n\r\n        var service = {\r\n            configureStates: configureStates,\r\n            getStates: getStates,\r\n            stateCounts: stateCounts\r\n        };\r\n\r\n        return service;\r\n\r\n        ////////////////\r\n\r\n        function configureStates(states) {\r\n            states.forEach(function (state) {\r\n                //state.config.resolve =\r\n                //    angular.extend(state.config.resolve || {}, statehelperConfig.config.resolveAlways);\r\n                $stateProvider.state(state.name, state.config);\r\n            });\r\n\r\n            //$stateProvider.otherwise({redirectTo: '/'});\r\n        }\r\n\r\n        function getStates() {\r\n\r\n        }\r\n\r\n        function stateCounts() {\r\n\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name app.ui\r\n     * @description\r\n     *\r\n     * The `app.ui` module pull in all the inidividual ui modules.\r\n     */\r\n    angular\r\n        .module('app.ui', [\r\n            'app.ui.sidenav',\r\n            'app.ui.appbar',\r\n            'app.ui.panels',\r\n            'app.ui.toc',\r\n            'app.ui.toolbox',\r\n            'app.ui.metadata',\r\n            'app.ui.mapnav',\r\n            'app.ui.filters',\r\n            'app.ui.common'\r\n        ]);\r\n})();\r\n","(() => {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name app.layout\r\n     *\r\n     * @description\r\n     *\r\n     * The `app.layout` module handles layout of the application, application-wide state transitions and events.\r\n     */\r\n    angular.module('app.layout', ['app.core', 'app.geo']);\r\n\r\n})();\r\n","(() => {\r\n\r\n    /**\r\n     * @ngdoc function\r\n     * @name SidePanelPlugController\r\n     * @module app.layout\r\n     * @description\r\n     *\r\n     * The `SidePanelPlugController` controller handles the side panel plug view.\r\n     * `self.active` is triggering an `active` CSS class to be added to the side panel plug when it's active. It's bound to a CSS class that prevents the plug view from occupying space when its content is not visible.\r\n     */\r\n    angular\r\n        .module('app.layout')\r\n        .controller('SidePanelPlugController', SidePanelPlugController);\r\n\r\n    function SidePanelPlugController($state) {\r\n        const self = this;\r\n\r\n        self.active = true;\r\n        self.closePanel = closePanel;\r\n\r\n        ////////\r\n\r\n        /**\r\n         * Temporary function to close the side panel.\r\n         * FIXME: this should be handled in the shatehelper\r\n         */\r\n        function closePanel() {\r\n            let toState = $state.current.name.replace(/.side.*/, '');\r\n            console.log('Closing side panel; going to', toState);\r\n            $state.go(toState, {}, {\r\n                location: false\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc function\r\n     * @name ShellController\r\n     * @module app.layout\r\n     * @description\r\n     *\r\n     * The `ShellController` controller handles the shell which is the visible part of the layout.\r\n     * `self.isLoading` is initially `true` and causes the loading overlay to be displayed; when `configService` resolves, it's set to `false` and the loading overly is removed.\r\n     */\r\n    angular\r\n        .module('app.layout')\r\n        .controller('ShellController', ShellController);\r\n\r\n    function ShellController(configService, layoutService, $state, $rootScope, events) {\r\n        const self = this;\r\n\r\n        self.config = configService.data;\r\n        self.isLoading = true;\r\n        self.$state = $state;\r\n\r\n        // TODO: mock settings; replace by config\r\n        self.menu = [\r\n            {\r\n                name: 'Options',\r\n                type: 'heading',\r\n                children: [\r\n                    {\r\n                        name: 'Full Screen',\r\n                        type: 'link'\r\n                    },\r\n                    {\r\n                        name: 'Share',\r\n                        type: 'link'\r\n                    },\r\n                    {\r\n                        name: 'Print',\r\n                        type: 'link'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                name: 'About',\r\n                type: 'link'\r\n            },\r\n            {\r\n                name: 'Help',\r\n                type: 'link'\r\n            }\r\n        ];\r\n\r\n        activate();\r\n\r\n        ////////////////\r\n\r\n        /**\r\n         * Controller's activate function.\r\n         */\r\n        function activate() {\r\n            $rootScope.$on(events.rvReady, hideLoadingScreen);\r\n        }\r\n\r\n        /**\r\n         * Sets `self.isLoading` to false which hides the loading overlay.\r\n         */\r\n        function hideLoadingScreen() {\r\n            self.isLoading = false;\r\n        }\r\n    }\r\n\r\n})();\r\n","(() => {\r\n\r\n    /**\r\n     * @ngdoc function\r\n     * @name MainPanelPlugController\r\n     * @module app.layout\r\n     * @description\r\n     *\r\n     * The `MainPanelPlugController` controller handles the main panel plug view.\r\n     * `self.active` is triggering an `active` CSS class to be added to the plug when it's active. It's is bound to a CSS class that prevents the plug view from occupying space when its content is not visible.\r\n     */\r\n    angular\r\n        .module('app.layout')\r\n        .controller('MainPanelPlugController', MainPanelPlugController);\r\n\r\n    function MainPanelPlugController($rootScope) {\r\n        const self = this;\r\n        self.active = true;\r\n        self.isStaggering = false;\r\n\r\n        //////////////\r\n\r\n        // staggers the main panel's transition if the side panel is open\r\n        // FIXME: move to mainpanel service?\r\n        $rootScope.$on('$stateChangeStart',\r\n            function (event, toState) {\r\n                const sideReg = /(app)\\.(main)\\.(.*)\\.(side)/;\r\n                self.isStaggering = sideReg.test(toState.name);\r\n            });\r\n    }\r\n})();\r\n","(() => {\r\n\r\n    /**\r\n     * @ngdoc service\r\n     * @name layoutService\r\n     * @module app.layout\r\n     *\r\n     * @description\r\n     * The `layoutService` service works as a UI-manager for the rest of the application. `layoutService` exposes services for individual components that can be called.\r\n     */\r\n    angular\r\n        .module('app.layout')\r\n        .factory('layoutService', layoutService);\r\n\r\n    function layoutService(sideNavigationService, mapNavigationService) {\r\n        const service = {\r\n            sidenav: sideNavigationService,\r\n            mapnav: mapNavigationService\r\n        };\r\n\r\n        return service;\r\n\r\n    }\r\n})();\r\n","(() => {\r\n\r\n    /**\r\n     * @ngdoc function\r\n     * @name app.layout#layoutConfig\r\n     * @module app.layout\r\n     * @description\r\n     *\r\n     * The `layoutConfig` run block sets the layout states and triggers the `app` state which is the default state upon app loading.\r\n     */\r\n    angular\r\n        .module('app.layout')\r\n        .run(layoutConfig);\r\n\r\n    /**\r\n     * Sets initial application routes.\r\n     * some info: https://github.com/angular-ui/ui-router/wiki/Nested-States-and-Nested-Views\r\n     *\r\n     * @param  {object} statehelper\r\n     * @param  {object} templateRegistry\r\n     * @param  {object} viewRegistry\r\n     * @param  {object} $state\r\n     */\r\n\r\n    function layoutConfig(statehelper, templateRegistry, viewRegistry, $state) {\r\n        statehelper.configureStates(getStates());\r\n\r\n        // when layout is ready, go to the default state\r\n        $state.go('app');\r\n\r\n        //$state.go('app', {}, {location: true}); // will change the url;\r\n        // http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$state#methods_go\r\n        // need to detect if it's a single-page app or multiple apps\r\n\r\n        ////////////////\r\n\r\n        /**\r\n         * Returns collection of state objects for layout module.\r\n         * @return {array} A collection of state objects for UI-router\r\n         */\r\n        function getStates() {\r\n            // TODO: move toc and toolbox parts to the corresponding modules\r\n            return [\r\n                {\r\n                    name: 'app',\r\n                    config: {\r\n                        url: '/',\r\n                        views: {\r\n                            appbarPlug: {\r\n                                templateUrl: templateRegistry.appbar\r\n                            },\r\n\r\n                            /*panelPlug: {\r\n                                template: '<div>panel placeholder' +\r\n                                    '<a href=\"\">example of a link</a></div>'\r\n                            },\r\n                            filtersPlug: {\r\n                                template: '<div>panel placeholder</div>'\r\n                            },*/\r\n                            detailsPlug: {\r\n                                template: '<div>details panel placeholder</div>'\r\n                            },\r\n                            geoSearchPlug: {\r\n                                template: '<div>geosearch placeholder</div>'\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    name: 'app.main.toc.filters',\r\n                    config: {\r\n                        abstract: true,\r\n                        views: viewRegistry.filtersPlug\r\n                    }\r\n                },\r\n                {\r\n                    name: 'app.main.toc.filters.default',\r\n                    config: {\r\n                        url: 'default',\r\n                        views: {\r\n                            contentPlug: {\r\n                                //templateUrl: templateRegistry.filtersDefault\r\n                                template: '<rv-filters-default></rv-filters-default>'\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    name: 'app.main.toc.filters.default.minimized',\r\n                    config: {\r\n                        url: 'full'\r\n                    }\r\n                },\r\n                {\r\n                    name: 'app.main.toc.filters.default.full',\r\n                    config: {\r\n                        url: 'full'\r\n                    }\r\n                },\r\n                {\r\n                    name: 'app.main.toc.filters.default.attached',\r\n                    config: {\r\n                        url: 'full'\r\n                    }\r\n                },\r\n                {\r\n                    name: 'app.main',\r\n                    config: {\r\n                        abstract: true,\r\n                        views: viewRegistry.panelPlug\r\n                    }\r\n                },\r\n                {\r\n                    name: 'app.main.toc',\r\n                    config: {\r\n                        url: 'toc',\r\n                        views: {\r\n                            contentPlug: {\r\n                                templateUrl: templateRegistry.toc\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    name: 'app.main.toc.side',\r\n                    config: {\r\n                        abstract: true,\r\n                        views: viewRegistry.sidePanelPlug\r\n                    }\r\n                },\r\n                {\r\n                    name: 'app.main.toc.side.metadata',\r\n                    config: {\r\n                        url: 'metadata',\r\n                        views: {\r\n                            contentPlug: {\r\n                                templateUrl: templateRegistry.metadata\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    name: 'app.main.toc.side.settings',\r\n                    config: {\r\n                        url: 'settings',\r\n                        views: {\r\n                            contentPlug: {\r\n                                templateUrl: templateRegistry.settings\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    name: 'app.main.toolbox',\r\n                    config: {\r\n                        url: 'toolbox',\r\n                        views: {\r\n                            contentPlug: {\r\n                                templateUrl: templateRegistry.toolbox\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            ];\r\n        }\r\n    }\r\n})();\r\n","(() => {\r\n\r\n    /**\r\n     * @ngdoc function\r\n     * @name FiltersPanelPlugController\r\n     * @module app.layout\r\n     * @requires $rootScope\r\n     * @description\r\n     *\r\n     * The `FiltersPanelPlugController` controller handles the filters panel plug view.\r\n     * `self.active` is triggering an `active` CSS class to be added to the side panel plug when it's active.\r\n     * `self.mode` is bound to a CSS class indicating current mode of the filters panel (default, attached, minimized, or full). `rvMorph` directive is used to animate between modes (when `rv-morph` attribute is applied to a HTML node).\r\n     */\r\n    angular\r\n        .module('app.layout')\r\n        .controller('FiltersPanelPlugController', FiltersPanelPlugController);\r\n\r\n    function FiltersPanelPlugController($rootScope, $state) {\r\n        const self = this;\r\n        self.active = true;\r\n        self.mode = 'default';\r\n\r\n        self.closePanel = closePanel;\r\n\r\n        ////////\r\n\r\n        // staggers the main panel's transition if the side panel is open\r\n        // FIXME: should be moved to a filter service and made sane\r\n        $rootScope.$on('$stateChangeStart',\r\n            function (event, toState) {\r\n                const filtersReg = /filters/;\r\n\r\n                if (filtersReg.test(toState.name)) {\r\n                    self.mode = toState.name.split('.')\r\n                        .pop();\r\n                }\r\n            });\r\n\r\n        /**\r\n         * Temporary function to close the filters panel.\r\n         * FIXME: this should be handled in the shatehelper\r\n         */\r\n        function closePanel() {\r\n            let toState = $state.current.name.replace(/.filters.*/, '');\r\n            console.log('Closing filters panel; going to', toState);\r\n            $state.go(toState, {}, {\r\n                location: false\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(() => {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name app.geo\r\n     *\r\n     * @description\r\n     *\r\n     * The `app.geo` module interfaces with the geoApi library to perform map related activities.\r\n     * It is responsible for stateful mapping components (e.g. map, layers, attribute tables), it should\r\n     * hold references to those objects and abstract functionality away from the rest of the API.\r\n     *\r\n     * This module will be ESRI specific as it will be interacting with ESRI objects.  As part of decoupling\r\n     * it should be built so it does not leak any ESRI specific concepts through the rest of the application.\r\n     * And, as far as possible, it should minimize the amount of GIS specific functionality needs to be built\r\n     * outside the module.\r\n     */\r\n    angular.module('app.geo', ['app.core']);\r\n\r\n})();\r\n","(() => {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc directive\r\n     * @restrict A\r\n     * @name rvInitMap\r\n     * @module app.geo\r\n     * @description\r\n     *\r\n     * The `rvInitMap` directive creates an ESRI Map object on the DOM node it is attached to.  It is a string attribute which\r\n     * will trigger the initialzation when set to 'true'.\r\n     */\r\n    angular\r\n        .module('app.geo')\r\n        .directive('rvInitMap', rvInitMap);\r\n\r\n    function rvInitMap(geoService) {\r\n\r\n        const directive = {\r\n            restrict: 'A',\r\n            link: linkFunc\r\n        };\r\n        return directive;\r\n\r\n        function linkFunc(scope, el, attr) {\r\n\r\n            scope.$watch(attr.rvInitMap, val => {\r\n                if (val === true) {\r\n                    console.log('Switched to true');\r\n                    console.log(el);\r\n\r\n                    //geoapi.grayMap(el[0]); // there should only be one instance of the directive\r\n                    geoService.gapi.grayMap(el[0]);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n})();\r\n","/* global geoapi */\r\n(() => {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc service\r\n     * @name geoService\r\n     * @module app.geo\r\n     *\r\n     * @description\r\n     * `geoService` wraps all calls to geoapi and also tracks the state of anything map related\r\n     * (ex: layers, filters, extent history).\r\n     */\r\n    angular\r\n        .module('app.geo')\r\n        .factory('geoService', geoService);\r\n\r\n    function geoService() {\r\n        const service = {\r\n            layers: {}\r\n        };\r\n\r\n        // FIXME: need to find a way to have the dojo URL set by the config\r\n        service.promise = geoapi('//ec.cloudapp.net/~aly/esri/dojo/dojo.js', window)\r\n            .then(initializedGeoApi => service.gapi = initializedGeoApi);\r\n\r\n        return service;\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name app.core\r\n     * @description\r\n     *\r\n     * The `app.core` module pull in all the commonly used dependencies.\r\n     */\r\n    angular.module('app.core', [\r\n        /*\r\n         * Angular modules\r\n         */\r\n        'ngAnimate', 'ngMaterial', 'ngSanitize',\r\n\r\n        /*\r\n         * Reusable cross app code modules\r\n         */\r\n        'app.common.router',\r\n\r\n        /*\r\n         * 3rd Party modules\r\n         */\r\n        'pascalprecht.translate',\r\n        'dotjem.angular.tree',\r\n        'ui.router'\r\n    ]);\r\n})();\r\n","(() => {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc function\r\n     * @name runBlock\r\n     * @module app.core\r\n     * @description\r\n     *\r\n     * The `runBlock` triggers config and locale file loading, sets language of the app.\r\n     */\r\n    angular\r\n        .module('app.core')\r\n        .run(runBlock);\r\n\r\n    function runBlock(configService, $rootScope, $translate, $q, events, geoService) {\r\n        const promises = [];\r\n        promises.push(geoService.promise);\r\n        promises.push(configService.initialize());\r\n\r\n        // wait on the config and geoapi\r\n        $q.all(promises)\r\n            .then(() => {\r\n                // initialize other services, if any\r\n                console.log('Config initialized');\r\n                $rootScope.$broadcast(events.rvReady);\r\n            })\r\n            .catch(reason => {\r\n                console.error('Everything broke');\r\n                console.error(reason);\r\n            });\r\n\r\n        // to prevent FOUC need to load translation files with config initialization if we know the language\r\n        //$rootScope.$on('$translateLoadingSuccess', data => console.log(data));\r\n        $rootScope.$on('$translateLoadingSuccess', () => console.log(\r\n            '$translateLoadingSuccess ->'));\r\n\r\n        // TODO: write language detection routine\r\n        $translate.use('fr-CA');\r\n    }\r\n})();\r\n","(() => {\r\n\r\n    /**\r\n     * @ngdoc function\r\n     * @name configBlock\r\n     * @module app.core\r\n     * @description\r\n     *\r\n     * The `configBlock` does three things right now:\r\n     * - configure our custom stateHelper to work with $stateProvider from ui-router,\r\n     * - configure translation provider by prepping static loader (and optionally setting preferred language if we know what it is),\r\n     * - configure theme colours for angular material\r\n     */\r\n    angular\r\n        .module('app.core')\r\n        .config(configBlock);\r\n\r\n    function configBlock($translateProvider, $stateProvider,\r\n        $mdThemingProvider, $mdIconProvider, statehelperConfigProvider) {\r\n\r\n        configureStateRouting();\r\n        configureTranslations();\r\n        configureTheme();\r\n        configureIconsets();\r\n\r\n        /**\r\n         * Sets state provider for `configHelper`.\r\n         */\r\n        function configureStateRouting() {\r\n            const stateCfg = statehelperConfigProvider;\r\n            stateCfg.config.$stateProvider = $stateProvider;\r\n        }\r\n\r\n        /**\r\n         * Configure angular translation provider. Set locale files location and file name pattern.\r\n         */\r\n        function configureTranslations() {\r\n            $translateProvider.useSanitizeValueStrategy('sanitizeParameters');\r\n            $translateProvider.useStaticFilesLoader({\r\n                prefix: './locales/',\r\n                suffix: '/translation.json'\r\n            });\r\n\r\n            //$translateProvider.preferredLanguage('en-CA');\r\n        }\r\n\r\n        /**\r\n         * Set theme colours from material desing colour palette.\r\n         */\r\n        function configureTheme() {\r\n            $mdThemingProvider.theme('default')\r\n                .primaryPalette('blue-grey')\r\n                .accentPalette('cyan');\r\n        }\r\n\r\n        /**\r\n         * Adds svg iconsets to the md icon provider.\r\n         */\r\n        function configureIconsets() {\r\n            $mdIconProvider\r\n                .iconSet('action', 'content/images/iconsets/action-icons.svg', 24)\r\n                .iconSet('alert', 'content/images/iconsets/alert-icons.svg', 24)\r\n                .iconSet('av', 'content/images/iconsets/av-icons.svg', 24)\r\n                .iconSet('communication',\r\n                    'content/images/iconsets/communication-icons.svg', 24)\r\n                .iconSet('community', 'content/images/iconsets/mdi-icons.svg', 24)\r\n                .iconSet('content', 'content/images/iconsets/content-icons.svg', 24)\r\n                .iconSet('device', 'content/images/iconsets/device-icons.svg', 24)\r\n                .iconSet('editor', 'content/images/iconsets/editor-icons.svg', 24)\r\n                .iconSet('file', 'content/images/iconsets/file-icons.svg', 24)\r\n                .iconSet('hardware', 'content/images/iconsets/hardware-icons.svg', 24)\r\n                .iconSet('icons', 'content/images/iconsets/icons-icons.svg', 24)\r\n                .iconSet('image', 'content/images/iconsets/image-icons.svg', 24)\r\n                .iconSet('maps', 'content/images/iconsets/maps-icons.svg', 24)\r\n                .iconSet('navigation', 'content/images/iconsets/navigation-icons.svg',\r\n                    24)\r\n                .iconSet('notification',\r\n                    'content/images/iconsets/notification-icons.svg', 24)\r\n                .iconSet('social', 'content/images/iconsets/social-icons.svg', 24)\r\n                .iconSet('toggle', 'content/images/iconsets/toggle-icons.svg', 24);\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc service\r\n     * @name configDefaults\r\n     * @module app.core\r\n     * @description\r\n     *\r\n     * The `configDefaults` constant service provides default config values.\r\n     */\r\n    /**\r\n     * @ngdoc service\r\n     * @name viewRegistry\r\n     * @module app.core\r\n     * @description\r\n     *\r\n     * The `viewRegistry` constant service provides standard views for the state manager.\r\n     */\r\n    /**\r\n     * @ngdoc service\r\n     * @name templateRegistry\r\n     * @module app.core\r\n     * @description\r\n     *\r\n     * The `templateRegistry` constant service provides template URLs.\r\n     */\r\n    angular\r\n        .module('app.core')\r\n        .constant('configDefaults', {\r\n            title: 'Dawn RAM'\r\n        })\r\n        .constant('events', {\r\n            rvReady: 'rvReady'\r\n        })\r\n        .constant('viewRegistry', {\r\n            filtersPlug: {\r\n                'filtersPlug@': {\r\n                    template: '<rv-filters-panel></rv-filters-panel>',\r\n                    controller: 'FiltersPanelPlugController as self'\r\n                }\r\n            },\r\n            panelPlug: {\r\n                'panelPlug@': {\r\n                    template: '<rv-main-panel></rv-main-panel>',\r\n                    controller: 'MainPanelPlugController as self'\r\n                }\r\n            },\r\n            sidePanelPlug: {\r\n                'sidePanelPlug@': {\r\n                    template: '<rv-side-panel></rv-side-panel>',\r\n                    controller: 'SidePanelPlugController as self'\r\n                }\r\n            }\r\n        })\r\n        .constant('templateRegistry', {\r\n            appbar: 'app/ui/appbar/appbar.html',\r\n            toc: 'app/ui/toc/toc.html',\r\n            toolbox: 'app/ui/toolbox/toolbox.html',\r\n            metadata: 'app/ui/metadata/metadata.html',\r\n            settings: 'app/ui/settings/settings.html'\r\n        });\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc service\r\n     * @name configService\r\n     * @module app.core\r\n     * @requires $q\r\n     * @requires $rootElement\r\n     * @requires $timeout\r\n     * @requires $http\r\n     * @requires configDefaults\r\n     * @description\r\n     *\r\n     * The `configService` is responsible for loading and parsing the supplied configuration.\r\n     *\r\n     * Config file is either specified inline, by a url or is referencing a global variable:\r\n     * ```html\r\n     * <div rv-map rv-cfg='{\"layout\": { \"title\": \"Granpa\"}}'></div>\r\n     * ```\r\n     * ```html\r\n     * <div rv-map rv-cfg=\"config.en.json\"></div>\r\n     * ```\r\n     * ```html\r\n     * <div rv-map rv-cfg=\"configOpts\"></div>\r\n     * <script>configOpts = {}</script>\r\n     * ```\r\n     * The main core run block (core.run.js) kicks in the initialization process by calling initialize on the `configService`. `configService` is responsible for parsing (inline) or loading (url) of the config. This service preserves the configuration in its pristine state (after applying all the defaults) - it will not be modified.\r\n     * After the main config service retrieved the configuration, all other services are initialized. Until then, the application is covered by a loading overlay to hide unstyled content.\r\n     *\r\n     * Config service body returns the service object with the following:\r\n     * - data: config data\r\n     * - initialize: initialize function; call from core.run\r\n     * - ready: checks if the service is ready to use\r\n     *\r\n     */\r\n    angular\r\n        .module('app.core')\r\n        .factory('configService', configService);\r\n\r\n    function configService($q, $rootElement, $timeout, $http, configDefaults) {\r\n        let initializePromise;\r\n        let isInitialized = false;\r\n\r\n        const service = {\r\n            data: {},\r\n            initialize: initialize,\r\n            ready: ready\r\n        };\r\n\r\n        return service;\r\n\r\n        ////////////////\r\n\r\n        /**\r\n         * Initializes `configService` by fetching and parsing `config` object.\r\n         */\r\n        function initialize() {\r\n            if (initializePromise) {\r\n                return initializePromise;\r\n            }\r\n\r\n            // store the promise and return it on all future calls; this way initialize can be called one time only\r\n            initializePromise = $q(function (fulfill, reject) {\r\n                const configAttr = $rootElement.attr('th-config');\r\n                let configJson;\r\n\r\n                // This function can only be called once.\r\n                if (isInitialized) {\r\n                    return fulfill();\r\n                }\r\n\r\n                // check if config attribute exist\r\n                if (configAttr) {\r\n                    // check if it's a valid JSON\r\n                    try {\r\n                        configJson = angular.fromJson(configAttr);\r\n                        configInitialized(configJson);\r\n                    } catch (e) {\r\n                        console.log('Not valid JSON');\r\n                    }\r\n\r\n                    // try to load config file\r\n                    if (!configJson) {\r\n                        $http\r\n                            .get(configAttr)\r\n                            .then(function (data) {\r\n                                if (data.data) {\r\n                                    configJson = data.data;\r\n                                }\r\n\r\n                                // simulate delay to show loading splash\r\n                                return $timeout(function () {\r\n                                    configInitialized(configJson);\r\n                                }, 2000);\r\n                            })\r\n                            .catch(function (error) {\r\n                                console.log('Config initialization failed:',\r\n                                    error);\r\n                                reject();\r\n                            });\r\n                    }\r\n                } else {\r\n                    configInitialized({});\r\n                }\r\n\r\n                /**\r\n                 * Initialization complete handler\r\n                 * @param  {object} config config object\r\n                 */\r\n                function configInitialized(config) {\r\n                    // apply any defaults from layoutConfigDefaults, then merge config on top\r\n                    // TODO: this is an exampe; actual merging of the defaults is more complicated\r\n                    angular.merge(service.data, configDefaults, config);\r\n\r\n                    isInitialized = true;\r\n\r\n                    return fulfill();\r\n                }\r\n            });\r\n\r\n            return initializePromise;\r\n        }\r\n\r\n        /**\r\n         * Checks if the service is ready to use.\r\n         * @param  {object} nextPromises optional promises to be resolved before returning\r\n         * @return {object}              promise to be resolved on config service initialization\r\n         */\r\n        function ready(nextPromises) {\r\n            return initializePromise\r\n                .then(function () {\r\n                    console.log('Ready promise resolved.');\r\n                    return $q.all(nextPromises);\r\n                })\r\n                .catch(function () {\r\n                    console.log('\"ready\" function failed');\r\n                });\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc service\r\n     * @name common\r\n     * @module app.core\r\n     * @requires $timeout\r\n     * @description\r\n     *\r\n     * The `common` service provides access to commonly used services and functions like $timeout, $broadcast, $q, logger, etc.\r\n     *\r\n     */\r\n    angular\r\n        .module('app.core')\r\n        .factory('common', common);\r\n\r\n    // TODO: add helper function to common\r\n    function common($timeout) {\r\n        var service = {\r\n            $timeout: $timeout\r\n        };\r\n\r\n        return service;\r\n\r\n        ////////////////\r\n    }\r\n})();\r\n"],"sourceRoot":"/source/"}